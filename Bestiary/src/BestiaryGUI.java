/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author marthahamlin
 */
public class BestiaryGUI extends javax.swing.JFrame {

    /**
     * Creates new form BestiaryGUI
     */
    public BestiaryGUI() {
        MonsterEdit_ModelMoveList = new javax.swing.DefaultListModel();
        MonsterFocus_ModelCollectionList = new javax.swing.DefaultListModel();
        MonsterFocus_ModelCollectionList.addElement("Starred");
        allCollections = new java.util.TreeSet<String>();
        allCollections.add("Starred");
        
        initComponents();
        
        updateCollections();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ModeToggle = new javax.swing.ButtonGroup();
        BestiaryPage_OrgTags = new javax.swing.ButtonGroup();
        BestiaryPage_SizeTags = new javax.swing.ButtonGroup();
        MonsterEdit = new javax.swing.JDialog();
        MonsterEdit_MainPane = new javax.swing.JPanel();
        MonsterEdit_TopPane = new javax.swing.JPanel();
        MonsterEdit_Row1 = new javax.swing.JPanel();
        MonsterEdit_NamePane = new javax.swing.JPanel();
        MonsterEdit_NameLabel = new javax.swing.JLabel();
        MonsterEdit_NameField = new javax.swing.JTextField();
        MonsterEdit_MonsterTagsButton = new javax.swing.JButton();
        MonsterEdit_Row2 = new javax.swing.JPanel();
        MonsterEdit_HPValue = new javax.swing.JSpinner();
        MonsterEdit_HPLabel = new javax.swing.JLabel();
        MonsterEdit_ArmorValue = new javax.swing.JSpinner();
        MonsterEdit_ArmorLabel = new javax.swing.JLabel();
        MonsterEdit_Row3 = new javax.swing.JPanel();
        MonsterEdit_AttackNameLabel = new javax.swing.JLabel();
        MonsterEdit_AttackNameField = new javax.swing.JTextField();
        MonsterEdit_Rolls = new javax.swing.JComboBox();
        MonsterEdit_Dice = new javax.swing.JComboBox();
        MonsterEdit_AttackMod = new javax.swing.JSpinner();
        MonsterEdit_AttackTags = new javax.swing.JButton();
        MonsterEdit_Row4 = new javax.swing.JPanel();
        MonsterEdit_SpecialQualitiesLabel = new javax.swing.JLabel();
        MonsterEdit_SpecialQualitiesField = new javax.swing.JTextField();
        MonsterEdit_MiddlePane = new javax.swing.JPanel();
        MonsterEdit_DescriptionLabel = new javax.swing.JLabel();
        MonsterEdit_DescriptionScrollPane = new javax.swing.JScrollPane();
        MonsterEdit_DescriptionField = new javax.swing.JTextArea();
        MonsterEdit_InstinctPane = new javax.swing.JPanel();
        MonsterEdit_InstinctLabel = new javax.swing.JLabel();
        MonsterEdit_InstinctField = new javax.swing.JTextField();
        MonsterEdit_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        MonsterEdit_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        MonsterEdit_BottomPane = new javax.swing.JPanel();
        MonsterEdit_MovesControlsPane = new javax.swing.JPanel();
        MonsterEdit_NewMove = new javax.swing.JTextField();
        MonsterEdit_RemoveMoveButton = new javax.swing.JButton();
        MonsterEdit_AddMoveButton = new javax.swing.JButton();
        Monster_EditMovesLabel = new javax.swing.JLabel();
        MonsterEdit_MovesScroll = new javax.swing.JScrollPane();
        MonsterEdit_MovesList = new javax.swing.JList();
        MonsterEdit_EndPane = new javax.swing.JPanel();
        MonsterEdit_SaveButton = new javax.swing.JButton();
        MonsterEdit_CancelButton = new javax.swing.JButton();
        MonsterEdit_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        MonsterEdit_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        MonsterEdit_filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        MonsterEdit_filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        MonsterEdit_filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        MonsterEdit_filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        MonsterTagsWindow = new javax.swing.JDialog();
        MonTagWin_MainPane = new javax.swing.JPanel();
        MonTagWin_GridPane = new javax.swing.JPanel();
        MonTagWin_MonsterTagsLabel = new javax.swing.JLabel();
        MonTagWin_OrgTagsLabel = new javax.swing.JLabel();
        MonTagWin_Magical = new javax.swing.JCheckBox();
        MonTagWin_Horde = new javax.swing.JRadioButton();
        MonTagWin_Devious = new javax.swing.JCheckBox();
        MonTagWin_Group = new javax.swing.JRadioButton();
        MonTagWin_Amorphous = new javax.swing.JCheckBox();
        MonTagWin_Solitary = new javax.swing.JRadioButton();
        MonTagWin_Organized = new javax.swing.JCheckBox();
        MonTagWin_filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        MonTagWin_Intelligent = new javax.swing.JCheckBox();
        MonTagWin_SizeTagsLabel = new javax.swing.JLabel();
        MonTagWin_Hoarder = new javax.swing.JCheckBox();
        MonTagWin_Tiny = new javax.swing.JRadioButton();
        MonTagWin_Stealthy = new javax.swing.JCheckBox();
        MonTagWin_Small = new javax.swing.JRadioButton();
        MonTagWin_Terrifying = new javax.swing.JCheckBox();
        MonTagWin_Normal = new javax.swing.JRadioButton();
        MonTagWin_Cautious = new javax.swing.JCheckBox();
        MonTagWin_Large = new javax.swing.JRadioButton();
        MonTagWin_Construct = new javax.swing.JCheckBox();
        MonTagWin_Huge = new javax.swing.JRadioButton();
        MonTagWin_Planar = new javax.swing.JCheckBox();
        MonTagWin_ButtonPane = new javax.swing.JPanel();
        MonTagWin_CancelButton = new javax.swing.JButton();
        MonTagWin_SaveButton = new javax.swing.JButton();
        MonTagWin_filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        MonTagWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        MonTagWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        MonTagWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        MonTagWin_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        MonTagsWin_OrgTagsGroup = new javax.swing.ButtonGroup();
        MonTagsWin_SizeTagsGroup = new javax.swing.ButtonGroup();
        AttackTagsWindow = new javax.swing.JDialog();
        AttTagWin_MainPane = new javax.swing.JPanel();
        AttTagWin_MainLabel = new javax.swing.JLabel();
        AttTagWin_GridPane = new javax.swing.JPanel();
        AttTagWin_AmmoBox = new javax.swing.JPanel();
        AttTagWin_AmmoCheck = new javax.swing.JCheckBox();
        AttTagWin_AmmoSpin = new javax.swing.JSpinner();
        AttTagWin_AmmoLabel = new javax.swing.JLabel();
        AttTagWin_StunCheck = new javax.swing.JCheckBox();
        AttTagWin_ForcefulCheck = new javax.swing.JCheckBox();
        AttTagWin_ThrownCheck = new javax.swing.JCheckBox();
        AttTagWin_IgnoresArmorCheck = new javax.swing.JCheckBox();
        AttTagWin_HandCheck = new javax.swing.JCheckBox();
        AttTagWin_MessyCheck = new javax.swing.JCheckBox();
        AttTagWin_CloseCheck = new javax.swing.JCheckBox();
        AttTagWin_PiercingBox = new javax.swing.JPanel();
        AttTagWin_PiercingCheck = new javax.swing.JCheckBox();
        AttTagWin_PiercingSpin = new javax.swing.JSpinner();
        AttTagWin_PiercingLabel = new javax.swing.JLabel();
        AttTagWin_ReachChange = new javax.swing.JCheckBox();
        AttTagWin_PreciseCheck = new javax.swing.JCheckBox();
        AttTagWin_NearCheck = new javax.swing.JCheckBox();
        AttTagWin_ReloadCheck = new javax.swing.JCheckBox();
        AttTagWin_FarCheck = new javax.swing.JCheckBox();
        AttTagWin_ButtonBox = new javax.swing.JPanel();
        AttTagWin_CancelButton = new javax.swing.JButton();
        AttTagWin_AttackButton = new javax.swing.JButton();
        AttTagWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        AttTagWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        AttTagWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        AttTagWin_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        MonsterSurvey = new javax.swing.JDialog();
        MonsterSurvey_Controls = new javax.swing.JPanel();
        MonsterSurvey_BackNextPane = new javax.swing.JPanel();
        MonsterSurvey_Back = new javax.swing.JButton();
        MonsterSurvey_Next = new javax.swing.JButton();
        MonsterSurvey_jSeparator1 = new javax.swing.JSeparator();
        MonsterSurvey_CancelPane = new javax.swing.JPanel();
        MonsterSurvey_Cancel = new javax.swing.JButton();
        MonsterSurvey_MainPane = new javax.swing.JPanel();
        AddToCollectionsWindow = new javax.swing.JDialog();
        AddToColWin_ButtonPanel = new javax.swing.JPanel();
        AddToColWin_YesButton = new javax.swing.JButton();
        AddToColWin_NoButton = new javax.swing.JButton();
        AddToColWin_Label = new javax.swing.JLabel();
        AddToColWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        AddToColWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        AddToColWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        EditCollectionsWindow = new javax.swing.JDialog();
        SetColWin_MainPane = new javax.swing.JPanel();
        SetColWin_ScrollPane = new javax.swing.JScrollPane();
        SetColWin_GridPane = new javax.swing.JPanel();
        SetColWin_TopPane = new javax.swing.JPanel();
        SetColWin_Title = new javax.swing.JLabel();
        SetColWin_NewCollectionButton = new javax.swing.JButton();
        SetColWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(32767, 5));
        SetColWin_BottomPane = new javax.swing.JPanel();
        SetColWin_CancelButton = new javax.swing.JButton();
        SetColWin_SaveButton = new javax.swing.JButton();
        SetColWin_filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(32767, 5));
        SetColWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        SetColWin_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        SetColWin_filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        SetColWin_filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        NameCollectionWindow = new javax.swing.JDialog();
        NameColWin_MainPanel = new javax.swing.JPanel();
        NameColWin_Title = new javax.swing.JLabel();
        NameColWin_NameField = new javax.swing.JTextField();
        NameColWin_ButtonPanel = new javax.swing.JPanel();
        NameColWin_CancelButton = new javax.swing.JButton();
        NameColWin_AddButton = new javax.swing.JButton();
        NameColWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        NameColWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        NameColWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        NameColWin_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        AddGMNotesWindow = new javax.swing.JDialog();
        AddGMNotesWin_MainPanel = new javax.swing.JPanel();
        AddGMNotesWin_ButtonPanel = new javax.swing.JPanel();
        AddGMNotesWin_YesButton = new javax.swing.JButton();
        AddGMNotesWin_NoButton = new javax.swing.JButton();
        AddGMNotesWin_Label = new javax.swing.JLabel();
        AddGMNotesWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        AddGMNotesWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        AddGMNotesWin_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        EditGMNoteWindow = new javax.swing.JDialog();
        EditGMNoteWin_MainPanel = new javax.swing.JPanel();
        EditGMNoteWin_Label = new javax.swing.JLabel();
        EditGMNoteWin_ScrollPane = new javax.swing.JScrollPane();
        EditGMNoteWin_NoteText = new javax.swing.JTextArea();
        EditGMNoteWin_ButtonPanel = new javax.swing.JPanel();
        EditGMNoteWin_CancelButton = new javax.swing.JButton();
        EditGMNoteWin_SaveButton = new javax.swing.JButton();
        EditGMNoteWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        EditGMNoteWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        EditGMNoteWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        DownloadConfirmationWindow = new javax.swing.JDialog();
        DownConWin_MainPanel = new javax.swing.JPanel();
        DownConWin_ButtonPanel = new javax.swing.JPanel();
        DownConWin_YesButton = new javax.swing.JButton();
        DownConWin_NoButton = new javax.swing.JButton();
        DownConWin_TextPane = new javax.swing.JPanel();
        DownConWin_Label1 = new javax.swing.JLabel();
        DownConWin_MonsterName = new javax.swing.JLabel();
        DownConWin_Label2 = new javax.swing.JLabel();
        DownConWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        DownConWin_filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        DownConWin_filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        DownloadCompleteWindow = new javax.swing.JDialog();
        DownCompWin_MainPanel = new javax.swing.JPanel();
        DownCompWin_ButtonPanel = new javax.swing.JPanel();
        DownCompWin_OkayButton = new javax.swing.JButton();
        DownCompWin_Label = new javax.swing.JLabel();
        DownCompWin_filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        DownCompWin_filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        DownCompWin_filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        UploadConfirmationWindow = new javax.swing.JDialog();
        UploadConWin_MainPanel = new javax.swing.JPanel();
        UploadConWin_ButtonPanel = new javax.swing.JPanel();
        UploadConWin_YesButton = new javax.swing.JButton();
        UploadConWin_NoButton = new javax.swing.JButton();
        UploadConWin_TextPanel = new javax.swing.JPanel();
        UploadConWin_Label1 = new javax.swing.JLabel();
        UploadConWin_MonsterName = new javax.swing.JLabel();
        UploadConWin_Label2 = new javax.swing.JLabel();
        UploadConWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        UploadConWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        UploadConWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        LoginWindow = new javax.swing.JDialog();
        LoginWin_MainPanel = new javax.swing.JPanel();
        LoginWin_Label = new javax.swing.JLabel();
        LoginWin_FieldPane = new javax.swing.JPanel();
        LoginWin_UsernamePanel = new javax.swing.JPanel();
        LoginWin_UsernameLabel = new javax.swing.JLabel();
        LoginWin_UsernameField = new javax.swing.JTextField();
        LoginWin_PasswordPane = new javax.swing.JPanel();
        LoginWin_PasswordLabel = new javax.swing.JLabel();
        LoginWin_PasswordField = new javax.swing.JPasswordField();
        LoginWin_ButtonPanel = new javax.swing.JPanel();
        LoginWin_OkayButton = new javax.swing.JButton();
        LoginWin_CancelButton = new javax.swing.JButton();
        LoginWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        LoginWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        LoginWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        LoginWin_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 5), new java.awt.Dimension(0, 5), new java.awt.Dimension(32767, 5));
        UploadCompleteWindow = new javax.swing.JDialog();
        UploadCompWin_MainPanel = new javax.swing.JPanel();
        UploadCompWin_ButtonPanel = new javax.swing.JPanel();
        UploadCompWin_OkayButton = new javax.swing.JButton();
        UploadCompWin_Label = new javax.swing.JLabel();
        UploadCompWin_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        UploadCompWin_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        UploadCompWin_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        ControlBar = new javax.swing.JPanel();
        ControlBar_MainTitle = new javax.swing.JLabel();
        ControlBar_ModeButtonBox = new javax.swing.JPanel();
        ControlBar_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 20), new java.awt.Dimension(20, 20), new java.awt.Dimension(20, 20));
        ControlBar_MyBestiaryButton = new javax.swing.JButton();
        ControlBar_NewMonsterButton = new javax.swing.JButton();
        ControlBar_CodexButton = new javax.swing.JButton();
        ModeScreens = new javax.swing.JPanel();
        BestiaryPage = new javax.swing.JPanel();
        BestiaryPage_LeftSide = new javax.swing.JPanel();
        BestiaryPage_MonsterScrollPane = new javax.swing.JScrollPane();
        BestiaryPage_CardPane = new javax.swing.JPanel();
        BestiaryPage_MonsterPane1 = new javax.swing.JPanel();
        BestiaryPage_MonsterCard1 = new LargeMonsterCard();
        BestiaryPage_MonsterButtonBox1 = new javax.swing.JPanel();
        BestiaryPage_MonsterViewButton1 = new javax.swing.JButton();
        BestiaryPage_MonsterPane2 = new javax.swing.JPanel();
        BestiaryPage_MonsterCard6 = new LargeMonsterCard();
        BestiaryPage_MonsterButtonBox6 = new javax.swing.JPanel();
        BestiaryPage_MonsterViewButton6 = new javax.swing.JButton();
        BestiaryPage_MonsterPane3 = new javax.swing.JPanel();
        BestiaryPage_MonsterCard7 = new LargeMonsterCard();
        BestiaryPage_MonsterButtonBox7 = new javax.swing.JPanel();
        BestiaryPage_MonsterViewButton7 = new javax.swing.JButton();
        BestiaryPage_MonsterPane4 = new javax.swing.JPanel();
        BestiaryPage_MonsterCard8 = new LargeMonsterCard();
        BestiaryPage_MonsterButtonBox8 = new javax.swing.JPanel();
        BestiaryPage_MonsterViewButton8 = new javax.swing.JButton();
        BestiaryPage_MonsterPane5 = new javax.swing.JPanel();
        BestiaryPage_MonsterCard9 = new LargeMonsterCard();
        BestiaryPage_MonsterButtonBox9 = new javax.swing.JPanel();
        BestiaryPage_MonsterViewButton9 = new javax.swing.JButton();
        BestiaryPage_RightSide = new javax.swing.JPanel();
        BestiaryPage_FilterButtonBox = new javax.swing.JPanel();
        BestiaryPage_FilterButton = new javax.swing.JButton();
        BestiaryPage_TagsBox = new javax.swing.JPanel();
        BestiaryPage_CollectionsTagPane = new javax.swing.JPanel();
        BestiaryPage_CollectionsTitle = new javax.swing.JLabel();
        BestiaryPage_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        BestiaryPage_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        BestiaryPage_CollectionsScrollPane = new javax.swing.JScrollPane();
        BestiaryPage_CollectionsTopPane = new javax.swing.JPanel();
        BestiaryPage_CollectionsGridPane = new javax.swing.JPanel();
        BestiaryPage_DummyCheck = new javax.swing.JCheckBox();
        BestiaryPage_DummyCheck2 = new javax.swing.JCheckBox();
        BestiaryPage_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        BestiaryPage_CollectionsClearSelButtonBox = new javax.swing.JPanel();
        BestiaryPage_CollectionsClearSelectionsButton = new javax.swing.JButton();
        BestiaryPage_MonsterTypesPane = new javax.swing.JPanel();
        BestiaryPage_MonsterTagsTitle = new javax.swing.JLabel();
        BestiaryPage_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        BestiaryPage_filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        BestiaryPage_MonTypeScrollPane = new javax.swing.JScrollPane();
        BestiaryPage_MonTypeTopPane = new javax.swing.JPanel();
        BestiaryPage_filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        BestiaryPage_MonTypeGridBox = new javax.swing.JPanel();
        BestiaryPage_MonsterTagTitle = new javax.swing.JLabel();
        BestiaryPage_Tag_Magical = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Devious = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Amorphous = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Organized = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Intelligent = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Hoarder = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Stealthy = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Terrifying = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Cautious = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Construct = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Planar = new javax.swing.JCheckBox();
        BestiaryPage_OrganizationLabel = new javax.swing.JLabel();
        BestiaryPage_Tag_Horde = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Group = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Solitary = new javax.swing.JCheckBox();
        BestiaryPage_SizeLabel = new javax.swing.JLabel();
        BestiaryPage_Tag_Tiny = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Small = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Normal = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Large = new javax.swing.JCheckBox();
        BestiaryPage_Tag_Huge = new javax.swing.JCheckBox();
        BestiaryPage_MonsterTagsButtonBox = new javax.swing.JPanel();
        BestiaryPage_MonsterTypesClearSelectionsButton = new javax.swing.JButton();
        MonsterFocus = new javax.swing.JPanel();
        MonsterFocus_Sidebar = new javax.swing.JPanel();
        MonsterFocus_UploadButtonBox = new javax.swing.JPanel();
        MonsterFocus_UploadButton = new javax.swing.JButton();
        MonsterFocus_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        MonsterFocus_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        MonsterFocus_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        MonsterFocus_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        MonsterFocus_CurrentCollectionsPane = new javax.swing.JPanel();
        MonsterFocus_CurrentCollectionsLabel = new javax.swing.JLabel();
        MonsterFocus_EditCollectionsButtonBox = new javax.swing.JPanel();
        MonsterFocus_EditCollectionsButton = new javax.swing.JButton();
        MonsterFocus_CurrentCollectionsScrollPane = new javax.swing.JScrollPane();
        MonsterFocus_CurrentCollectionsList = new javax.swing.JList();
        MonsterFocus_filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        MonsterFocus_filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        MonsterFocus_GMNotePane = new javax.swing.JPanel();
        MonsterFocus_GMNotesTopPane = new javax.swing.JPanel();
        MonsterFocus_GMNotesTitle = new javax.swing.JLabel();
        MonsterFocus_GMNotesScrollPane = new javax.swing.JScrollPane();
        MonsterFocus_GMNotesText = new javax.swing.JTextArea();
        MonsterFocus_filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        MonsterFocus_filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        MonsterFocus_EditNoteButtonBox = new javax.swing.JPanel();
        MonsterFocus_EditNoteButton = new javax.swing.JButton();
        MonsterFocus_BackButtonBox = new javax.swing.JPanel();
        MonsterFocus_BackToBestiaryButton = new javax.swing.JButton();
        MonsterFocus_MonsterPane = new javax.swing.JPanel();
        MonsterFocus_MainMonster = new LargeMonsterCard();
        MonsterFocus_EditMonsterPane = new javax.swing.JPanel();
        MonsterFocus_EditMonsterButton = new javax.swing.JButton();
        CodexPage = new javax.swing.JPanel();
        CodexPage_MainScrollPane = new javax.swing.JScrollPane();
        CodexPage_MainPane = new javax.swing.JPanel();
        CodexPage_PopularMonstersPane = new javax.swing.JPanel();
        CodexPage_filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        CodexPage_filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        CodexPage_PopularMonstersInternalPane = new javax.swing.JPanel();
        CodexPage_MonsterPane1 = new javax.swing.JPanel();
        CodexPage_MonsterCard1 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane1 = new javax.swing.JPanel();
        CodexPage_DownloadButton1 = new javax.swing.JButton();
        CodexPage_MonsterPane2 = new javax.swing.JPanel();
        CodexPage_MonsterCard2 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane2 = new javax.swing.JPanel();
        CodexPage_DownloadButton2 = new javax.swing.JButton();
        CodexPage_MonsterPane3 = new javax.swing.JPanel();
        CodexPage_MonsterCard3 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane3 = new javax.swing.JPanel();
        CodexPage_DownloadButton3 = new javax.swing.JButton();
        CodexPage_MonsterPane4 = new javax.swing.JPanel();
        CodexPage_MonsterCard4 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane4 = new javax.swing.JPanel();
        CodexPage_DownloadButton4 = new javax.swing.JButton();
        CodexPage_MonsterPane5 = new javax.swing.JPanel();
        CodexPage_MonsterCard5 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane5 = new javax.swing.JPanel();
        CodexPage_DownloadButton5 = new javax.swing.JButton();
        CodexPage_PopularMonstersTitle = new javax.swing.JLabel();
        CodexPage_RecentMonstersPane = new javax.swing.JPanel();
        CodexPage_filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        CodexPage_filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        CodexPage_RecentMonstersInternalPane = new javax.swing.JPanel();
        CodexPage_MonsterPane6 = new javax.swing.JPanel();
        CodexPage_MonsterCard6 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane6 = new javax.swing.JPanel();
        CodexPage_DownloadButton6 = new javax.swing.JButton();
        CodexPage_MonsterPane7 = new javax.swing.JPanel();
        CodexPage_MonsterCard7 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane7 = new javax.swing.JPanel();
        CodexPage_DownloadButton7 = new javax.swing.JButton();
        CodexPage_MonsterPane8 = new javax.swing.JPanel();
        CodexPage_MonsterCard8 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane8 = new javax.swing.JPanel();
        CodexPage_DownloadButton8 = new javax.swing.JButton();
        CodexPage_MonsterPane9 = new javax.swing.JPanel();
        CodexPage_MonsterCard9 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane9 = new javax.swing.JPanel();
        CodexPage_DownloadButton9 = new javax.swing.JButton();
        CodexPage_MonsterPane10 = new javax.swing.JPanel();
        CodexPage_MonsterCard10 = new MiniMonsterCard();
        CodexPage_DownloadButtonPane10 = new javax.swing.JPanel();
        CodexPage_DownloadButton10 = new javax.swing.JButton();
        CodexPage_RecentMonstersTitle = new javax.swing.JLabel();

        MonsterEdit.setAlwaysOnTop(true);
        MonsterEdit.setModal(true);
        MonsterEdit.setResizable(false);
        MonsterEdit.setSize(new java.awt.Dimension(700, 500));

        MonsterEdit_MainPane.setLayout(new java.awt.BorderLayout());

        MonsterEdit_TopPane.setLayout(new java.awt.GridLayout(4, 0));

        MonsterEdit_Row1.setLayout(new java.awt.BorderLayout());

        MonsterEdit_NameLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        MonsterEdit_NameLabel.setText("Name:");
        MonsterEdit_NamePane.add(MonsterEdit_NameLabel);

        MonsterEdit_NameField.setPreferredSize(new java.awt.Dimension(300, 28));
        MonsterEdit_NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_NameFieldActionPerformed(evt);
            }
        });
        MonsterEdit_NamePane.add(MonsterEdit_NameField);

        MonsterEdit_Row1.add(MonsterEdit_NamePane, java.awt.BorderLayout.WEST);

        MonsterEdit_MonsterTagsButton.setText("Monster Tags");
        MonsterEdit_MonsterTagsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_MonsterTagsButtonActionPerformed(evt);
            }
        });
        MonsterEdit_Row1.add(MonsterEdit_MonsterTagsButton, java.awt.BorderLayout.EAST);

        MonsterEdit_TopPane.add(MonsterEdit_Row1);

        MonsterEdit_Row2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        MonsterEdit_HPValue.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        MonsterEdit_Row2.add(MonsterEdit_HPValue);

        MonsterEdit_HPLabel.setText("HP      ");
        MonsterEdit_Row2.add(MonsterEdit_HPLabel);

        MonsterEdit_ArmorValue.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        MonsterEdit_Row2.add(MonsterEdit_ArmorValue);

        MonsterEdit_ArmorLabel.setText("Armor");
        MonsterEdit_Row2.add(MonsterEdit_ArmorLabel);

        MonsterEdit_TopPane.add(MonsterEdit_Row2);

        MonsterEdit_Row3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        MonsterEdit_AttackNameLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        MonsterEdit_AttackNameLabel.setText("Attack Name:");
        MonsterEdit_Row3.add(MonsterEdit_AttackNameLabel);

        MonsterEdit_AttackNameField.setPreferredSize(new java.awt.Dimension(175, 28));
        MonsterEdit_AttackNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_AttackNameFieldActionPerformed(evt);
            }
        });
        MonsterEdit_Row3.add(MonsterEdit_AttackNameField);

        MonsterEdit_Rolls.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Best of 2", "Worst of 2" }));
        MonsterEdit_Row3.add(MonsterEdit_Rolls);

        MonsterEdit_Dice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "d4", "d6", "d8", "d10", "d12", "d20" }));
        MonsterEdit_Row3.add(MonsterEdit_Dice);

        MonsterEdit_AttackMod.setModel(new javax.swing.SpinnerNumberModel(0, -20, 20, 1));
        MonsterEdit_AttackMod.setVerifyInputWhenFocusTarget(false);
        MonsterEdit_Row3.add(MonsterEdit_AttackMod);

        MonsterEdit_AttackTags.setText("Attack Tags");
        MonsterEdit_AttackTags.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_AttackTagsActionPerformed(evt);
            }
        });
        MonsterEdit_Row3.add(MonsterEdit_AttackTags);

        MonsterEdit_TopPane.add(MonsterEdit_Row3);

        MonsterEdit_Row4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        MonsterEdit_SpecialQualitiesLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        MonsterEdit_SpecialQualitiesLabel.setText("Special Qualities:");
        MonsterEdit_Row4.add(MonsterEdit_SpecialQualitiesLabel);

        MonsterEdit_SpecialQualitiesField.setPreferredSize(new java.awt.Dimension(400, 28));
        MonsterEdit_Row4.add(MonsterEdit_SpecialQualitiesField);

        MonsterEdit_TopPane.add(MonsterEdit_Row4);

        MonsterEdit_MainPane.add(MonsterEdit_TopPane, java.awt.BorderLayout.NORTH);

        MonsterEdit_MiddlePane.setLayout(new java.awt.BorderLayout());

        MonsterEdit_DescriptionLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        MonsterEdit_DescriptionLabel.setText(" Description:");
        MonsterEdit_MiddlePane.add(MonsterEdit_DescriptionLabel, java.awt.BorderLayout.PAGE_START);

        MonsterEdit_DescriptionField.setColumns(20);
        MonsterEdit_DescriptionField.setLineWrap(true);
        MonsterEdit_DescriptionField.setRows(5);
        MonsterEdit_DescriptionScrollPane.setViewportView(MonsterEdit_DescriptionField);

        MonsterEdit_MiddlePane.add(MonsterEdit_DescriptionScrollPane, java.awt.BorderLayout.CENTER);

        MonsterEdit_InstinctPane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        MonsterEdit_InstinctLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        MonsterEdit_InstinctLabel.setText("Instinct:");
        MonsterEdit_InstinctPane.add(MonsterEdit_InstinctLabel);

        MonsterEdit_InstinctField.setPreferredSize(new java.awt.Dimension(300, 28));
        MonsterEdit_InstinctField.setSize(new java.awt.Dimension(200, 28));
        MonsterEdit_InstinctPane.add(MonsterEdit_InstinctField);

        MonsterEdit_MiddlePane.add(MonsterEdit_InstinctPane, java.awt.BorderLayout.SOUTH);
        MonsterEdit_MiddlePane.add(MonsterEdit_filler1, java.awt.BorderLayout.WEST);
        MonsterEdit_MiddlePane.add(MonsterEdit_filler2, java.awt.BorderLayout.EAST);

        MonsterEdit_MainPane.add(MonsterEdit_MiddlePane, java.awt.BorderLayout.CENTER);

        MonsterEdit_BottomPane.setLayout(new java.awt.BorderLayout());

        MonsterEdit_MovesControlsPane.setLayout(new java.awt.BorderLayout());

        MonsterEdit_NewMove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_NewMoveActionPerformed(evt);
            }
        });
        MonsterEdit_MovesControlsPane.add(MonsterEdit_NewMove, java.awt.BorderLayout.CENTER);

        MonsterEdit_RemoveMoveButton.setText("Remove");
        MonsterEdit_RemoveMoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_RemoveMoveButtonActionPerformed(evt);
            }
        });
        MonsterEdit_MovesControlsPane.add(MonsterEdit_RemoveMoveButton, java.awt.BorderLayout.LINE_START);

        MonsterEdit_AddMoveButton.setText("Add Move");
        MonsterEdit_AddMoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_AddMoveButtonActionPerformed(evt);
            }
        });
        MonsterEdit_MovesControlsPane.add(MonsterEdit_AddMoveButton, java.awt.BorderLayout.LINE_END);

        Monster_EditMovesLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        Monster_EditMovesLabel.setText(" Moves");
        MonsterEdit_MovesControlsPane.add(Monster_EditMovesLabel, java.awt.BorderLayout.PAGE_START);

        MonsterEdit_BottomPane.add(MonsterEdit_MovesControlsPane, java.awt.BorderLayout.NORTH);

        MonsterEdit_MovesScroll.setPreferredSize(new java.awt.Dimension(100, 75));

        MonsterEdit_MovesList.setModel(MonsterEdit_ModelMoveList);
        MonsterEdit_MovesScroll.setViewportView(MonsterEdit_MovesList);

        MonsterEdit_BottomPane.add(MonsterEdit_MovesScroll, java.awt.BorderLayout.CENTER);

        MonsterEdit_EndPane.setLayout(new java.awt.BorderLayout());

        MonsterEdit_SaveButton.setText("Save");
        MonsterEdit_SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_SaveButtonActionPerformed(evt);
            }
        });
        MonsterEdit_EndPane.add(MonsterEdit_SaveButton, java.awt.BorderLayout.EAST);

        MonsterEdit_CancelButton.setText("Cancel");
        MonsterEdit_CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterEdit_CancelButtonActionPerformed(evt);
            }
        });
        MonsterEdit_EndPane.add(MonsterEdit_CancelButton, java.awt.BorderLayout.WEST);

        MonsterEdit_BottomPane.add(MonsterEdit_EndPane, java.awt.BorderLayout.SOUTH);
        MonsterEdit_BottomPane.add(MonsterEdit_filler3, java.awt.BorderLayout.WEST);
        MonsterEdit_BottomPane.add(MonsterEdit_filler4, java.awt.BorderLayout.EAST);

        MonsterEdit_MainPane.add(MonsterEdit_BottomPane, java.awt.BorderLayout.SOUTH);

        MonsterEdit.getContentPane().add(MonsterEdit_MainPane, java.awt.BorderLayout.CENTER);
        MonsterEdit.getContentPane().add(MonsterEdit_filler5, java.awt.BorderLayout.WEST);
        MonsterEdit.getContentPane().add(MonsterEdit_filler6, java.awt.BorderLayout.EAST);
        MonsterEdit.getContentPane().add(MonsterEdit_filler7, java.awt.BorderLayout.NORTH);
        MonsterEdit.getContentPane().add(MonsterEdit_filler8, java.awt.BorderLayout.SOUTH);

        MonsterTagsWindow.setAlwaysOnTop(true);
        MonsterTagsWindow.setMinimumSize(new java.awt.Dimension(300, 300));
        MonsterTagsWindow.setModal(true);
        MonsterTagsWindow.setResizable(false);

        MonTagWin_MainPane.setLayout(new java.awt.BorderLayout());

        MonTagWin_GridPane.setLayout(new java.awt.GridLayout(12, 2));

        MonTagWin_MonsterTagsLabel.setText("Monster Tags:");
        MonTagWin_GridPane.add(MonTagWin_MonsterTagsLabel);

        MonTagWin_OrgTagsLabel.setText("Organization Tags:");
        MonTagWin_GridPane.add(MonTagWin_OrgTagsLabel);

        MonTagWin_Magical.setText("Magical");
        MonTagWin_Magical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonTagWin_MagicalActionPerformed(evt);
            }
        });
        MonTagWin_GridPane.add(MonTagWin_Magical);

        MonTagsWin_OrgTagsGroup.add(MonTagWin_Horde);
        MonTagWin_Horde.setText("Horde");
        MonTagWin_GridPane.add(MonTagWin_Horde);

        MonTagWin_Devious.setText("Devious");
        MonTagWin_GridPane.add(MonTagWin_Devious);

        MonTagsWin_OrgTagsGroup.add(MonTagWin_Group);
        MonTagWin_Group.setText("Group");
        MonTagWin_Group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonTagWin_GroupActionPerformed(evt);
            }
        });
        MonTagWin_GridPane.add(MonTagWin_Group);

        MonTagWin_Amorphous.setText("Amorphous");
        MonTagWin_GridPane.add(MonTagWin_Amorphous);

        MonTagsWin_OrgTagsGroup.add(MonTagWin_Solitary);
        MonTagWin_Solitary.setText("Solitary");
        MonTagWin_GridPane.add(MonTagWin_Solitary);

        MonTagWin_Organized.setText("Organized");
        MonTagWin_GridPane.add(MonTagWin_Organized);
        MonTagWin_GridPane.add(MonTagWin_filler6);

        MonTagWin_Intelligent.setText("Intelligent");
        MonTagWin_GridPane.add(MonTagWin_Intelligent);

        MonTagWin_SizeTagsLabel.setText("Size Tags:");
        MonTagWin_GridPane.add(MonTagWin_SizeTagsLabel);

        MonTagWin_Hoarder.setText("Hoarder");
        MonTagWin_GridPane.add(MonTagWin_Hoarder);

        MonTagsWin_SizeTagsGroup.add(MonTagWin_Tiny);
        MonTagWin_Tiny.setText("Tiny");
        MonTagWin_GridPane.add(MonTagWin_Tiny);

        MonTagWin_Stealthy.setText("Stealthy");
        MonTagWin_GridPane.add(MonTagWin_Stealthy);

        MonTagsWin_SizeTagsGroup.add(MonTagWin_Small);
        MonTagWin_Small.setText("Small");
        MonTagWin_GridPane.add(MonTagWin_Small);

        MonTagWin_Terrifying.setText("Terrifying");
        MonTagWin_GridPane.add(MonTagWin_Terrifying);

        MonTagsWin_SizeTagsGroup.add(MonTagWin_Normal);
        MonTagWin_Normal.setText("Normal");
        MonTagWin_GridPane.add(MonTagWin_Normal);

        MonTagWin_Cautious.setText("Cautious");
        MonTagWin_GridPane.add(MonTagWin_Cautious);

        MonTagsWin_SizeTagsGroup.add(MonTagWin_Large);
        MonTagWin_Large.setText("Large");
        MonTagWin_GridPane.add(MonTagWin_Large);

        MonTagWin_Construct.setText("Construct");
        MonTagWin_GridPane.add(MonTagWin_Construct);

        MonTagsWin_SizeTagsGroup.add(MonTagWin_Huge);
        MonTagWin_Huge.setText("Huge");
        MonTagWin_GridPane.add(MonTagWin_Huge);

        MonTagWin_Planar.setText("Planar");
        MonTagWin_GridPane.add(MonTagWin_Planar);

        MonTagWin_MainPane.add(MonTagWin_GridPane, java.awt.BorderLayout.CENTER);

        MonTagWin_ButtonPane.setLayout(new java.awt.BorderLayout());

        MonTagWin_CancelButton.setText("Cancel");
        MonTagWin_CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonTagWin_CancelButtonActionPerformed(evt);
            }
        });
        MonTagWin_ButtonPane.add(MonTagWin_CancelButton, java.awt.BorderLayout.WEST);

        MonTagWin_SaveButton.setText("Save");
        MonTagWin_SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonTagWin_SaveButtonActionPerformed(evt);
            }
        });
        MonTagWin_ButtonPane.add(MonTagWin_SaveButton, java.awt.BorderLayout.EAST);
        MonTagWin_ButtonPane.add(MonTagWin_filler5, java.awt.BorderLayout.NORTH);

        MonTagWin_MainPane.add(MonTagWin_ButtonPane, java.awt.BorderLayout.SOUTH);

        MonsterTagsWindow.getContentPane().add(MonTagWin_MainPane, java.awt.BorderLayout.CENTER);
        MonsterTagsWindow.getContentPane().add(MonTagWin_filler1, java.awt.BorderLayout.WEST);
        MonsterTagsWindow.getContentPane().add(MonTagWin_filler2, java.awt.BorderLayout.EAST);
        MonsterTagsWindow.getContentPane().add(MonTagWin_filler3, java.awt.BorderLayout.NORTH);
        MonsterTagsWindow.getContentPane().add(MonTagWin_filler4, java.awt.BorderLayout.SOUTH);

        AttackTagsWindow.setAlwaysOnTop(true);
        AttackTagsWindow.setModal(true);
        AttackTagsWindow.setResizable(false);
        AttackTagsWindow.setSize(new java.awt.Dimension(300, 300));

        AttTagWin_MainPane.setLayout(new java.awt.BorderLayout());

        AttTagWin_MainLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        AttTagWin_MainLabel.setText(" Attack Tags:");
        AttTagWin_MainLabel.setPreferredSize(new java.awt.Dimension(88, 25));
        AttTagWin_MainPane.add(AttTagWin_MainLabel, java.awt.BorderLayout.NORTH);

        AttTagWin_GridPane.setLayout(new java.awt.GridLayout(7, 2));

        AttTagWin_AmmoBox.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));
        AttTagWin_AmmoBox.add(AttTagWin_AmmoCheck);

        AttTagWin_AmmoSpin.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        AttTagWin_AmmoSpin.setPreferredSize(new java.awt.Dimension(55, 28));
        AttTagWin_AmmoBox.add(AttTagWin_AmmoSpin);

        AttTagWin_AmmoLabel.setText(" Ammo");
        AttTagWin_AmmoBox.add(AttTagWin_AmmoLabel);

        AttTagWin_GridPane.add(AttTagWin_AmmoBox);

        AttTagWin_StunCheck.setText("Stun");
        AttTagWin_GridPane.add(AttTagWin_StunCheck);

        AttTagWin_ForcefulCheck.setText("Forceful");
        AttTagWin_ForcefulCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttTagWin_ForcefulCheckActionPerformed(evt);
            }
        });
        AttTagWin_GridPane.add(AttTagWin_ForcefulCheck);

        AttTagWin_ThrownCheck.setText("Thrown");
        AttTagWin_ThrownCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttTagWin_ThrownCheckActionPerformed(evt);
            }
        });
        AttTagWin_GridPane.add(AttTagWin_ThrownCheck);

        AttTagWin_IgnoresArmorCheck.setText("Ignores Armor");
        AttTagWin_GridPane.add(AttTagWin_IgnoresArmorCheck);

        AttTagWin_HandCheck.setText("Hand");
        AttTagWin_GridPane.add(AttTagWin_HandCheck);

        AttTagWin_MessyCheck.setText("Messy");
        AttTagWin_GridPane.add(AttTagWin_MessyCheck);

        AttTagWin_CloseCheck.setText("Close");
        AttTagWin_GridPane.add(AttTagWin_CloseCheck);

        AttTagWin_PiercingBox.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 2));
        AttTagWin_PiercingBox.add(AttTagWin_PiercingCheck);

        AttTagWin_PiercingSpin.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        AttTagWin_PiercingBox.add(AttTagWin_PiercingSpin);

        AttTagWin_PiercingLabel.setText(" Piercing");
        AttTagWin_PiercingBox.add(AttTagWin_PiercingLabel);

        AttTagWin_GridPane.add(AttTagWin_PiercingBox);

        AttTagWin_ReachChange.setText("Reach");
        AttTagWin_GridPane.add(AttTagWin_ReachChange);

        AttTagWin_PreciseCheck.setText("Precise");
        AttTagWin_PreciseCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttTagWin_PreciseCheckActionPerformed(evt);
            }
        });
        AttTagWin_GridPane.add(AttTagWin_PreciseCheck);

        AttTagWin_NearCheck.setText("Near");
        AttTagWin_GridPane.add(AttTagWin_NearCheck);

        AttTagWin_ReloadCheck.setText("Reload");
        AttTagWin_GridPane.add(AttTagWin_ReloadCheck);

        AttTagWin_FarCheck.setText("Far");
        AttTagWin_GridPane.add(AttTagWin_FarCheck);

        AttTagWin_MainPane.add(AttTagWin_GridPane, java.awt.BorderLayout.CENTER);

        AttTagWin_ButtonBox.setLayout(new java.awt.BorderLayout());

        AttTagWin_CancelButton.setText("Cancel");
        AttTagWin_CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttTagWin_CancelButtonActionPerformed(evt);
            }
        });
        AttTagWin_ButtonBox.add(AttTagWin_CancelButton, java.awt.BorderLayout.WEST);

        AttTagWin_AttackButton.setText("Save");
        AttTagWin_AttackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttTagWin_AttackButtonActionPerformed(evt);
            }
        });
        AttTagWin_ButtonBox.add(AttTagWin_AttackButton, java.awt.BorderLayout.EAST);

        AttTagWin_MainPane.add(AttTagWin_ButtonBox, java.awt.BorderLayout.PAGE_END);

        AttackTagsWindow.getContentPane().add(AttTagWin_MainPane, java.awt.BorderLayout.CENTER);
        AttackTagsWindow.getContentPane().add(AttTagWin_filler1, java.awt.BorderLayout.NORTH);
        AttackTagsWindow.getContentPane().add(AttTagWin_filler2, java.awt.BorderLayout.SOUTH);
        AttackTagsWindow.getContentPane().add(AttTagWin_filler3, java.awt.BorderLayout.WEST);
        AttackTagsWindow.getContentPane().add(AttTagWin_filler4, java.awt.BorderLayout.EAST);

        MonsterSurvey_Controls.setLayout(new java.awt.BorderLayout());

        MonsterSurvey_Back.setText("Back");
        MonsterSurvey_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterSurvey_BackActionPerformed(evt);
            }
        });
        MonsterSurvey_BackNextPane.add(MonsterSurvey_Back);

        MonsterSurvey_Next.setText("Next");
        MonsterSurvey_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterSurvey_NextActionPerformed(evt);
            }
        });
        MonsterSurvey_BackNextPane.add(MonsterSurvey_Next);

        MonsterSurvey_Controls.add(MonsterSurvey_BackNextPane, java.awt.BorderLayout.EAST);
        MonsterSurvey_Controls.add(MonsterSurvey_jSeparator1, java.awt.BorderLayout.NORTH);

        MonsterSurvey_Cancel.setText("Cancel");
        MonsterSurvey_CancelPane.add(MonsterSurvey_Cancel);

        MonsterSurvey_Controls.add(MonsterSurvey_CancelPane, java.awt.BorderLayout.WEST);

        MonsterSurvey.getContentPane().add(MonsterSurvey_Controls, java.awt.BorderLayout.PAGE_END);

        MonsterSurvey_MainPane.setLayout(new java.awt.CardLayout());
        MonsterSurvey.getContentPane().add(MonsterSurvey_MainPane, java.awt.BorderLayout.CENTER);

        AddToCollectionsWindow.setAlwaysOnTop(true);
        AddToCollectionsWindow.setModal(true);
        AddToCollectionsWindow.setResizable(false);
        AddToCollectionsWindow.setSize(new java.awt.Dimension(336, 32));

        AddToColWin_YesButton.setText("Yes");
        AddToColWin_YesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToColWin_YesButtonActionPerformed(evt);
            }
        });
        AddToColWin_ButtonPanel.add(AddToColWin_YesButton);

        AddToColWin_NoButton.setText("No");
        AddToColWin_NoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToColWin_NoButtonActionPerformed(evt);
            }
        });
        AddToColWin_ButtonPanel.add(AddToColWin_NoButton);

        AddToCollectionsWindow.getContentPane().add(AddToColWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        AddToColWin_Label.setText("Would you like to add this monster to collections?");
        AddToColWin_Label.setPreferredSize(new java.awt.Dimension(316, 22));
        AddToCollectionsWindow.getContentPane().add(AddToColWin_Label, java.awt.BorderLayout.CENTER);
        AddToCollectionsWindow.getContentPane().add(AddToColWin_filler1, java.awt.BorderLayout.WEST);
        AddToCollectionsWindow.getContentPane().add(AddToColWin_filler2, java.awt.BorderLayout.EAST);
        AddToCollectionsWindow.getContentPane().add(AddToColWin_filler3, java.awt.BorderLayout.NORTH);

        EditCollectionsWindow.setAlwaysOnTop(true);
        EditCollectionsWindow.setModal(true);
        EditCollectionsWindow.setPreferredSize(new java.awt.Dimension(400, 300));
        EditCollectionsWindow.setResizable(false);
        EditCollectionsWindow.setSize(new java.awt.Dimension(400, 300));

        SetColWin_MainPane.setLayout(new java.awt.BorderLayout());

        SetColWin_ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        SetColWin_GridPane.setLayout(new java.awt.GridLayout(0, 1));
        SetColWin_ScrollPane.setViewportView(SetColWin_GridPane);

        SetColWin_MainPane.add(SetColWin_ScrollPane, java.awt.BorderLayout.CENTER);

        SetColWin_TopPane.setLayout(new java.awt.BorderLayout());

        SetColWin_Title.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        SetColWin_Title.setText("Collections:");
        SetColWin_TopPane.add(SetColWin_Title, java.awt.BorderLayout.WEST);

        SetColWin_NewCollectionButton.setText("New Collection");
        SetColWin_NewCollectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetColWin_NewCollectionButtonActionPerformed(evt);
            }
        });
        SetColWin_TopPane.add(SetColWin_NewCollectionButton, java.awt.BorderLayout.EAST);
        SetColWin_TopPane.add(SetColWin_filler1, java.awt.BorderLayout.SOUTH);

        SetColWin_MainPane.add(SetColWin_TopPane, java.awt.BorderLayout.NORTH);

        SetColWin_BottomPane.setLayout(new java.awt.BorderLayout());

        SetColWin_CancelButton.setText("Cancel");
        SetColWin_CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetColWin_CancelButtonActionPerformed(evt);
            }
        });
        SetColWin_BottomPane.add(SetColWin_CancelButton, java.awt.BorderLayout.WEST);

        SetColWin_SaveButton.setText("Save");
        SetColWin_SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetColWin_SaveButtonActionPerformed(evt);
            }
        });
        SetColWin_BottomPane.add(SetColWin_SaveButton, java.awt.BorderLayout.EAST);
        SetColWin_BottomPane.add(SetColWin_filler7, java.awt.BorderLayout.NORTH);

        SetColWin_MainPane.add(SetColWin_BottomPane, java.awt.BorderLayout.SOUTH);

        EditCollectionsWindow.getContentPane().add(SetColWin_MainPane, java.awt.BorderLayout.CENTER);
        EditCollectionsWindow.getContentPane().add(SetColWin_filler3, java.awt.BorderLayout.WEST);
        EditCollectionsWindow.getContentPane().add(SetColWin_filler4, java.awt.BorderLayout.EAST);
        EditCollectionsWindow.getContentPane().add(SetColWin_filler5, java.awt.BorderLayout.PAGE_START);
        EditCollectionsWindow.getContentPane().add(SetColWin_filler6, java.awt.BorderLayout.PAGE_END);

        NameCollectionWindow.setAlwaysOnTop(true);
        NameCollectionWindow.setModal(true);
        NameCollectionWindow.setPreferredSize(new java.awt.Dimension(375, 150));
        NameCollectionWindow.setResizable(false);
        NameCollectionWindow.setSize(new java.awt.Dimension(375, 150));

        NameColWin_MainPanel.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        NameColWin_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NameColWin_Title.setText("What would you like to call your new collection?");
        NameColWin_Title.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NameColWin_MainPanel.add(NameColWin_Title);
        NameColWin_MainPanel.add(NameColWin_NameField);

        NameColWin_ButtonPanel.setLayout(new java.awt.BorderLayout());

        NameColWin_CancelButton.setText("Cancel");
        NameColWin_CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameColWin_CancelButtonActionPerformed(evt);
            }
        });
        NameColWin_ButtonPanel.add(NameColWin_CancelButton, java.awt.BorderLayout.WEST);

        NameColWin_AddButton.setText("Add");
        NameColWin_AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameColWin_AddButtonActionPerformed(evt);
            }
        });
        NameColWin_ButtonPanel.add(NameColWin_AddButton, java.awt.BorderLayout.EAST);

        NameColWin_MainPanel.add(NameColWin_ButtonPanel);

        NameCollectionWindow.getContentPane().add(NameColWin_MainPanel, java.awt.BorderLayout.CENTER);
        NameCollectionWindow.getContentPane().add(NameColWin_filler1, java.awt.BorderLayout.NORTH);
        NameCollectionWindow.getContentPane().add(NameColWin_filler2, java.awt.BorderLayout.SOUTH);
        NameCollectionWindow.getContentPane().add(NameColWin_filler3, java.awt.BorderLayout.WEST);
        NameCollectionWindow.getContentPane().add(NameColWin_filler4, java.awt.BorderLayout.EAST);

        AddGMNotesWindow.setAlwaysOnTop(true);
        AddGMNotesWindow.setModal(true);
        AddGMNotesWindow.setResizable(false);
        AddGMNotesWindow.setSize(new java.awt.Dimension(250, 100));

        AddGMNotesWin_MainPanel.setLayout(new java.awt.BorderLayout());

        AddGMNotesWin_YesButton.setText("Yes");
        AddGMNotesWin_ButtonPanel.add(AddGMNotesWin_YesButton);

        AddGMNotesWin_NoButton.setText("No");
        AddGMNotesWin_ButtonPanel.add(AddGMNotesWin_NoButton);

        AddGMNotesWin_MainPanel.add(AddGMNotesWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        AddGMNotesWin_Label.setText("Would you like to add GM notes?");
        AddGMNotesWin_MainPanel.add(AddGMNotesWin_Label, java.awt.BorderLayout.NORTH);

        AddGMNotesWindow.getContentPane().add(AddGMNotesWin_MainPanel, java.awt.BorderLayout.CENTER);
        AddGMNotesWindow.getContentPane().add(AddGMNotesWin_filler1, java.awt.BorderLayout.PAGE_START);
        AddGMNotesWindow.getContentPane().add(AddGMNotesWin_filler3, java.awt.BorderLayout.LINE_END);
        AddGMNotesWindow.getContentPane().add(AddGMNotesWin_filler4, java.awt.BorderLayout.LINE_START);

        EditGMNoteWindow.setAlwaysOnTop(true);
        EditGMNoteWindow.setModal(true);
        EditGMNoteWindow.setPreferredSize(new java.awt.Dimension(400, 300));
        EditGMNoteWindow.setSize(new java.awt.Dimension(400, 300));

        EditGMNoteWin_MainPanel.setLayout(new java.awt.BorderLayout());

        EditGMNoteWin_Label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        EditGMNoteWin_Label.setText("GM Notes:");
        EditGMNoteWin_MainPanel.add(EditGMNoteWin_Label, java.awt.BorderLayout.NORTH);

        EditGMNoteWin_ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        EditGMNoteWin_ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        EditGMNoteWin_NoteText.setColumns(20);
        EditGMNoteWin_NoteText.setLineWrap(true);
        EditGMNoteWin_NoteText.setRows(5);
        EditGMNoteWin_NoteText.setWrapStyleWord(true);
        EditGMNoteWin_ScrollPane.setViewportView(EditGMNoteWin_NoteText);

        EditGMNoteWin_MainPanel.add(EditGMNoteWin_ScrollPane, java.awt.BorderLayout.CENTER);

        EditGMNoteWin_ButtonPanel.setLayout(new java.awt.BorderLayout());

        EditGMNoteWin_CancelButton.setText("Cancel");
        EditGMNoteWin_CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditGMNoteWin_CancelButtonActionPerformed(evt);
            }
        });
        EditGMNoteWin_ButtonPanel.add(EditGMNoteWin_CancelButton, java.awt.BorderLayout.WEST);

        EditGMNoteWin_SaveButton.setText("Save");
        EditGMNoteWin_SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditGMNoteWin_SaveButtonActionPerformed(evt);
            }
        });
        EditGMNoteWin_ButtonPanel.add(EditGMNoteWin_SaveButton, java.awt.BorderLayout.EAST);

        EditGMNoteWin_MainPanel.add(EditGMNoteWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        EditGMNoteWindow.getContentPane().add(EditGMNoteWin_MainPanel, java.awt.BorderLayout.CENTER);
        EditGMNoteWindow.getContentPane().add(EditGMNoteWin_filler1, java.awt.BorderLayout.WEST);
        EditGMNoteWindow.getContentPane().add(EditGMNoteWin_filler2, java.awt.BorderLayout.EAST);
        EditGMNoteWindow.getContentPane().add(EditGMNoteWin_filler3, java.awt.BorderLayout.PAGE_START);

        DownloadConfirmationWindow.setAlwaysOnTop(true);
        DownloadConfirmationWindow.setModal(true);
        DownloadConfirmationWindow.setResizable(false);
        DownloadConfirmationWindow.setSize(new java.awt.Dimension(300, 125));

        DownConWin_MainPanel.setLayout(new java.awt.BorderLayout());

        DownConWin_YesButton.setText("Yes");
        DownConWin_YesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownConWin_YesButtonActionPerformed(evt);
            }
        });
        DownConWin_ButtonPanel.add(DownConWin_YesButton);

        DownConWin_NoButton.setText("No");
        DownConWin_NoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownConWin_NoButtonActionPerformed(evt);
            }
        });
        DownConWin_ButtonPanel.add(DownConWin_NoButton);

        DownConWin_MainPanel.add(DownConWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        DownConWin_Label1.setText("Are you sure you want to download");
        DownConWin_TextPane.add(DownConWin_Label1);

        DownConWin_MonsterName.setText("jLabel2");
        DownConWin_TextPane.add(DownConWin_MonsterName);

        DownConWin_Label2.setText("?");
        DownConWin_TextPane.add(DownConWin_Label2);

        DownConWin_MainPanel.add(DownConWin_TextPane, java.awt.BorderLayout.CENTER);

        DownloadConfirmationWindow.getContentPane().add(DownConWin_MainPanel, java.awt.BorderLayout.CENTER);
        DownloadConfirmationWindow.getContentPane().add(DownConWin_filler2, java.awt.BorderLayout.PAGE_START);
        DownloadConfirmationWindow.getContentPane().add(DownConWin_filler5, java.awt.BorderLayout.LINE_END);
        DownloadConfirmationWindow.getContentPane().add(DownConWin_filler6, java.awt.BorderLayout.LINE_START);

        DownloadCompleteWindow.setAlwaysOnTop(true);
        DownloadCompleteWindow.setModal(true);
        DownloadCompleteWindow.setResizable(false);
        DownloadCompleteWindow.setSize(new java.awt.Dimension(150, 100));

        DownCompWin_MainPanel.setLayout(new java.awt.BorderLayout());

        DownCompWin_OkayButton.setText("Okay");
        DownCompWin_OkayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownCompWin_OkayButtonActionPerformed(evt);
            }
        });
        DownCompWin_ButtonPanel.add(DownCompWin_OkayButton);

        DownCompWin_MainPanel.add(DownCompWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        DownCompWin_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DownCompWin_Label.setText("Download Complete!");
        DownCompWin_MainPanel.add(DownCompWin_Label, java.awt.BorderLayout.NORTH);

        DownloadCompleteWindow.getContentPane().add(DownCompWin_MainPanel, java.awt.BorderLayout.CENTER);
        DownloadCompleteWindow.getContentPane().add(DownCompWin_filler7, java.awt.BorderLayout.PAGE_START);
        DownloadCompleteWindow.getContentPane().add(DownCompWin_filler8, java.awt.BorderLayout.LINE_END);
        DownloadCompleteWindow.getContentPane().add(DownCompWin_filler9, java.awt.BorderLayout.LINE_START);

        UploadConfirmationWindow.setAlwaysOnTop(true);
        UploadConfirmationWindow.setModal(true);
        UploadConfirmationWindow.setResizable(false);
        UploadConfirmationWindow.setSize(new java.awt.Dimension(300, 125));

        UploadConWin_MainPanel.setLayout(new java.awt.BorderLayout());

        UploadConWin_YesButton.setText("Yes");
        UploadConWin_YesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadConWin_YesButtonActionPerformed(evt);
            }
        });
        UploadConWin_ButtonPanel.add(UploadConWin_YesButton);

        UploadConWin_NoButton.setText("No");
        UploadConWin_NoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadConWin_NoButtonActionPerformed(evt);
            }
        });
        UploadConWin_ButtonPanel.add(UploadConWin_NoButton);

        UploadConWin_MainPanel.add(UploadConWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        UploadConWin_Label1.setText("Are you sure you want to upload");
        UploadConWin_TextPanel.add(UploadConWin_Label1);

        UploadConWin_MonsterName.setText("jLabel2");
        UploadConWin_TextPanel.add(UploadConWin_MonsterName);

        UploadConWin_Label2.setText("?");
        UploadConWin_TextPanel.add(UploadConWin_Label2);

        UploadConWin_MainPanel.add(UploadConWin_TextPanel, java.awt.BorderLayout.CENTER);

        UploadConfirmationWindow.getContentPane().add(UploadConWin_MainPanel, java.awt.BorderLayout.CENTER);
        UploadConfirmationWindow.getContentPane().add(UploadConWin_filler1, java.awt.BorderLayout.PAGE_START);
        UploadConfirmationWindow.getContentPane().add(UploadConWin_filler2, java.awt.BorderLayout.LINE_END);
        UploadConfirmationWindow.getContentPane().add(UploadConWin_filler3, java.awt.BorderLayout.LINE_START);

        LoginWindow.setAlwaysOnTop(true);
        LoginWindow.setModal(true);
        LoginWindow.setSize(new java.awt.Dimension(350, 200));

        LoginWin_MainPanel.setSize(new java.awt.Dimension(377, 156));
        LoginWin_MainPanel.setLayout(new java.awt.BorderLayout());

        LoginWin_Label.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        LoginWin_Label.setText("Please log in:");
        LoginWin_MainPanel.add(LoginWin_Label, java.awt.BorderLayout.NORTH);

        LoginWin_FieldPane.setLayout(new java.awt.GridLayout(2, 0));

        LoginWin_UsernamePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        LoginWin_UsernameLabel.setText("Username");
        LoginWin_UsernamePanel.add(LoginWin_UsernameLabel);

        LoginWin_UsernameField.setPreferredSize(new java.awt.Dimension(300, 24));
        LoginWin_UsernameField.setSize(new java.awt.Dimension(300, 24));
        LoginWin_UsernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginWin_UsernameFieldActionPerformed(evt);
            }
        });
        LoginWin_UsernamePanel.add(LoginWin_UsernameField);

        LoginWin_FieldPane.add(LoginWin_UsernamePanel);

        LoginWin_PasswordPane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        LoginWin_PasswordLabel.setText("Password");
        LoginWin_PasswordPane.add(LoginWin_PasswordLabel);

        LoginWin_PasswordField.setPreferredSize(new java.awt.Dimension(300, 28));
        LoginWin_PasswordPane.add(LoginWin_PasswordField);

        LoginWin_FieldPane.add(LoginWin_PasswordPane);

        LoginWin_MainPanel.add(LoginWin_FieldPane, java.awt.BorderLayout.CENTER);

        LoginWin_ButtonPanel.setLayout(new java.awt.BorderLayout());

        LoginWin_OkayButton.setText("Okay");
        LoginWin_OkayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginWin_OkayButtonActionPerformed(evt);
            }
        });
        LoginWin_ButtonPanel.add(LoginWin_OkayButton, java.awt.BorderLayout.EAST);

        LoginWin_CancelButton.setText("Cancel");
        LoginWin_CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginWin_CancelButtonActionPerformed(evt);
            }
        });
        LoginWin_ButtonPanel.add(LoginWin_CancelButton, java.awt.BorderLayout.WEST);

        LoginWin_MainPanel.add(LoginWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        LoginWindow.getContentPane().add(LoginWin_MainPanel, java.awt.BorderLayout.CENTER);
        LoginWindow.getContentPane().add(LoginWin_filler1, java.awt.BorderLayout.WEST);
        LoginWindow.getContentPane().add(LoginWin_filler2, java.awt.BorderLayout.EAST);
        LoginWindow.getContentPane().add(LoginWin_filler3, java.awt.BorderLayout.NORTH);
        LoginWindow.getContentPane().add(LoginWin_filler4, java.awt.BorderLayout.SOUTH);

        UploadCompleteWindow.setResizable(false);
        UploadCompleteWindow.setSize(new java.awt.Dimension(150, 100));

        UploadCompWin_MainPanel.setLayout(new java.awt.BorderLayout());

        UploadCompWin_OkayButton.setText("Okay");
        UploadCompWin_OkayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadCompWin_OkayButtonActionPerformed(evt);
            }
        });
        UploadCompWin_ButtonPanel.add(UploadCompWin_OkayButton);

        UploadCompWin_MainPanel.add(UploadCompWin_ButtonPanel, java.awt.BorderLayout.SOUTH);

        UploadCompWin_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UploadCompWin_Label.setText("Upload Complete!");
        UploadCompWin_MainPanel.add(UploadCompWin_Label, java.awt.BorderLayout.NORTH);

        UploadCompleteWindow.getContentPane().add(UploadCompWin_MainPanel, java.awt.BorderLayout.CENTER);
        UploadCompleteWindow.getContentPane().add(UploadCompWin_filler1, java.awt.BorderLayout.PAGE_START);
        UploadCompleteWindow.getContentPane().add(UploadCompWin_filler2, java.awt.BorderLayout.LINE_END);
        UploadCompleteWindow.getContentPane().add(UploadCompWin_filler3, java.awt.BorderLayout.LINE_START);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 786));

        ControlBar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        ControlBar.setMaximumSize(new java.awt.Dimension(1024, 125));
        ControlBar.setPreferredSize(new java.awt.Dimension(1024, 125));
        ControlBar.setLayout(new java.awt.GridLayout(1, 2));

        ControlBar_MainTitle.setFont(new java.awt.Font("Lucida Blackletter", 1, 75)); // NOI18N
        ControlBar_MainTitle.setText("  The Bestiary");
        ControlBar.add(ControlBar_MainTitle);

        ControlBar_ModeButtonBox.setLayout(new java.awt.GridLayout(1, 0));
        ControlBar_ModeButtonBox.add(ControlBar_filler1);

        ControlBar_MyBestiaryButton.setFont(new java.awt.Font("Lucida Blackletter", 0, 18)); // NOI18N
        ControlBar_MyBestiaryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2013-11-02 15.26.05 copy.jpg"))); // NOI18N
        ControlBar_MyBestiaryButton.setText("My Bestiary");
        ControlBar_MyBestiaryButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ControlBar_MyBestiaryButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ControlBar_MyBestiaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ControlBar_MyBestiaryButtonActionPerformed(evt);
            }
        });
        ControlBar_ModeButtonBox.add(ControlBar_MyBestiaryButton);

        ControlBar_NewMonsterButton.setFont(new java.awt.Font("Lucida Blackletter", 0, 18)); // NOI18N
        ControlBar_NewMonsterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2013-11-02 15.26.12.jpg"))); // NOI18N
        ControlBar_NewMonsterButton.setText("New Monster");
        ControlBar_NewMonsterButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ControlBar_NewMonsterButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ControlBar_NewMonsterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ControlBar_NewMonsterButtonActionPerformed(evt);
            }
        });
        ControlBar_ModeButtonBox.add(ControlBar_NewMonsterButton);

        ControlBar_CodexButton.setFont(new java.awt.Font("Lucida Blackletter", 0, 18)); // NOI18N
        ControlBar_CodexButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2013-11-02 15.26.12 copy.jpg"))); // NOI18N
        ControlBar_CodexButton.setText("Codex");
        ControlBar_CodexButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ControlBar_CodexButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ControlBar_CodexButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ControlBar_CodexButtonActionPerformed(evt);
            }
        });
        ControlBar_ModeButtonBox.add(ControlBar_CodexButton);

        ControlBar.add(ControlBar_ModeButtonBox);

        getContentPane().add(ControlBar, java.awt.BorderLayout.NORTH);

        ModeScreens.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        ModeScreens.setMinimumSize(new java.awt.Dimension(16, 661));
        ModeScreens.setPreferredSize(new java.awt.Dimension(1024, 661));
        ModeScreens.setLayout(new java.awt.CardLayout());

        BestiaryPage.setName("BestiaryPage"); // NOI18N
        BestiaryPage.setLayout(new java.awt.BorderLayout());

        BestiaryPage_LeftSide.setMinimumSize(new java.awt.Dimension(780, 23));
        BestiaryPage_LeftSide.setPreferredSize(new java.awt.Dimension(700, 100));
        BestiaryPage_LeftSide.setSize(new java.awt.Dimension(760, 100));
        BestiaryPage_LeftSide.setLayout(new java.awt.BorderLayout());

        BestiaryPage_MonsterScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        BestiaryPage_MonsterScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        BestiaryPage_MonsterScrollPane.setMinimumSize(new java.awt.Dimension(760, 23));
        BestiaryPage_MonsterScrollPane.setPreferredSize(new java.awt.Dimension(700, 100));

        BestiaryPage_CardPane.setSize(new java.awt.Dimension(760, 0));
        BestiaryPage_CardPane.setLayout(new java.awt.GridLayout(5, 0, 0, 20));

        BestiaryPage_MonsterPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BestiaryPage_MonsterPane1.setLayout(new java.awt.BorderLayout());

        BestiaryPage_MonsterCard1.setBorder(null);
        BestiaryPage_MonsterPane1.add(BestiaryPage_MonsterCard1, java.awt.BorderLayout.CENTER);

        BestiaryPage_MonsterButtonBox1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        BestiaryPage_MonsterViewButton1.setText("View Monster Details");
        BestiaryPage_MonsterViewButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_MonsterViewButton1ActionPerformed(evt);
            }
        });
        BestiaryPage_MonsterButtonBox1.add(BestiaryPage_MonsterViewButton1);

        BestiaryPage_MonsterPane1.add(BestiaryPage_MonsterButtonBox1, java.awt.BorderLayout.SOUTH);

        BestiaryPage_CardPane.add(BestiaryPage_MonsterPane1);

        BestiaryPage_MonsterPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BestiaryPage_MonsterPane2.setLayout(new java.awt.BorderLayout());

        BestiaryPage_MonsterCard6.setBorder(null);
        BestiaryPage_MonsterPane2.add(BestiaryPage_MonsterCard6, java.awt.BorderLayout.CENTER);

        BestiaryPage_MonsterButtonBox6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        BestiaryPage_MonsterViewButton6.setText("View Monster Details");
        BestiaryPage_MonsterViewButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_MonsterViewButton6ActionPerformed(evt);
            }
        });
        BestiaryPage_MonsterButtonBox6.add(BestiaryPage_MonsterViewButton6);

        BestiaryPage_MonsterPane2.add(BestiaryPage_MonsterButtonBox6, java.awt.BorderLayout.SOUTH);

        BestiaryPage_CardPane.add(BestiaryPage_MonsterPane2);

        BestiaryPage_MonsterPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BestiaryPage_MonsterPane3.setLayout(new java.awt.BorderLayout());

        BestiaryPage_MonsterCard7.setBorder(null);
        BestiaryPage_MonsterPane3.add(BestiaryPage_MonsterCard7, java.awt.BorderLayout.CENTER);

        BestiaryPage_MonsterButtonBox7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        BestiaryPage_MonsterViewButton7.setText("View Monster Details");
        BestiaryPage_MonsterViewButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_MonsterViewButton7ActionPerformed(evt);
            }
        });
        BestiaryPage_MonsterButtonBox7.add(BestiaryPage_MonsterViewButton7);

        BestiaryPage_MonsterPane3.add(BestiaryPage_MonsterButtonBox7, java.awt.BorderLayout.SOUTH);

        BestiaryPage_CardPane.add(BestiaryPage_MonsterPane3);

        BestiaryPage_MonsterPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BestiaryPage_MonsterPane4.setLayout(new java.awt.BorderLayout());

        BestiaryPage_MonsterCard8.setBorder(null);
        BestiaryPage_MonsterPane4.add(BestiaryPage_MonsterCard8, java.awt.BorderLayout.CENTER);

        BestiaryPage_MonsterButtonBox8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        BestiaryPage_MonsterViewButton8.setText("View Monster Details");
        BestiaryPage_MonsterViewButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_MonsterViewButton8ActionPerformed(evt);
            }
        });
        BestiaryPage_MonsterButtonBox8.add(BestiaryPage_MonsterViewButton8);

        BestiaryPage_MonsterPane4.add(BestiaryPage_MonsterButtonBox8, java.awt.BorderLayout.SOUTH);

        BestiaryPage_CardPane.add(BestiaryPage_MonsterPane4);

        BestiaryPage_MonsterPane5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BestiaryPage_MonsterPane5.setLayout(new java.awt.BorderLayout());

        BestiaryPage_MonsterCard9.setBorder(null);
        BestiaryPage_MonsterPane5.add(BestiaryPage_MonsterCard9, java.awt.BorderLayout.CENTER);

        BestiaryPage_MonsterButtonBox9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        BestiaryPage_MonsterViewButton9.setText("View Monster Details");
        BestiaryPage_MonsterViewButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_MonsterViewButton9ActionPerformed(evt);
            }
        });
        BestiaryPage_MonsterButtonBox9.add(BestiaryPage_MonsterViewButton9);

        BestiaryPage_MonsterPane5.add(BestiaryPage_MonsterButtonBox9, java.awt.BorderLayout.SOUTH);

        BestiaryPage_CardPane.add(BestiaryPage_MonsterPane5);

        BestiaryPage_MonsterScrollPane.setViewportView(BestiaryPage_CardPane);

        BestiaryPage_LeftSide.add(BestiaryPage_MonsterScrollPane, java.awt.BorderLayout.WEST);

        BestiaryPage.add(BestiaryPage_LeftSide, java.awt.BorderLayout.WEST);

        BestiaryPage_RightSide.setLayout(new java.awt.BorderLayout());

        BestiaryPage_FilterButton.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        BestiaryPage_FilterButton.setText("Filter");
        BestiaryPage_FilterButton.setEnabled(false);
        BestiaryPage_FilterButtonBox.add(BestiaryPage_FilterButton);

        BestiaryPage_RightSide.add(BestiaryPage_FilterButtonBox, java.awt.BorderLayout.NORTH);

        BestiaryPage_TagsBox.setLayout(new java.awt.GridLayout(2, 0));

        BestiaryPage_CollectionsTagPane.setLayout(new java.awt.BorderLayout());

        BestiaryPage_CollectionsTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        BestiaryPage_CollectionsTitle.setText(" Collections:");
        BestiaryPage_CollectionsTitle.setPreferredSize(new java.awt.Dimension(101, 30));
        BestiaryPage_CollectionsTagPane.add(BestiaryPage_CollectionsTitle, java.awt.BorderLayout.PAGE_START);
        BestiaryPage_CollectionsTagPane.add(BestiaryPage_filler1, java.awt.BorderLayout.LINE_START);
        BestiaryPage_CollectionsTagPane.add(BestiaryPage_filler2, java.awt.BorderLayout.LINE_END);

        BestiaryPage_CollectionsScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        BestiaryPage_CollectionsTopPane.setLayout(new java.awt.BorderLayout());

        BestiaryPage_CollectionsGridPane.setLayout(new java.awt.GridLayout(10, 0));

        BestiaryPage_DummyCheck.setText("Starred");
        BestiaryPage_DummyCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_DummyCheckActionPerformed(evt);
            }
        });
        BestiaryPage_CollectionsGridPane.add(BestiaryPage_DummyCheck);

        BestiaryPage_DummyCheck2.setText("Cats");
        BestiaryPage_CollectionsGridPane.add(BestiaryPage_DummyCheck2);

        BestiaryPage_CollectionsTopPane.add(BestiaryPage_CollectionsGridPane, java.awt.BorderLayout.CENTER);
        BestiaryPage_CollectionsTopPane.add(BestiaryPage_filler3, java.awt.BorderLayout.WEST);

        BestiaryPage_CollectionsScrollPane.setViewportView(BestiaryPage_CollectionsTopPane);

        BestiaryPage_CollectionsTagPane.add(BestiaryPage_CollectionsScrollPane, java.awt.BorderLayout.CENTER);

        BestiaryPage_CollectionsClearSelButtonBox.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        BestiaryPage_CollectionsClearSelectionsButton.setText("Clear Selections");
        BestiaryPage_CollectionsClearSelectionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_CollectionsClearSelectionsButtonActionPerformed(evt);
            }
        });
        BestiaryPage_CollectionsClearSelButtonBox.add(BestiaryPage_CollectionsClearSelectionsButton);

        BestiaryPage_CollectionsTagPane.add(BestiaryPage_CollectionsClearSelButtonBox, java.awt.BorderLayout.SOUTH);

        BestiaryPage_TagsBox.add(BestiaryPage_CollectionsTagPane);

        BestiaryPage_MonsterTypesPane.setLayout(new java.awt.BorderLayout());

        BestiaryPage_MonsterTagsTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        BestiaryPage_MonsterTagsTitle.setText(" Monster Types:");
        BestiaryPage_MonsterTagsTitle.setPreferredSize(new java.awt.Dimension(73, 30));
        BestiaryPage_MonsterTypesPane.add(BestiaryPage_MonsterTagsTitle, java.awt.BorderLayout.PAGE_START);
        BestiaryPage_MonsterTypesPane.add(BestiaryPage_filler4, java.awt.BorderLayout.LINE_START);
        BestiaryPage_MonsterTypesPane.add(BestiaryPage_filler5, java.awt.BorderLayout.LINE_END);

        BestiaryPage_MonTypeScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        BestiaryPage_MonTypeTopPane.setLayout(new java.awt.BorderLayout());
        BestiaryPage_MonTypeTopPane.add(BestiaryPage_filler6, java.awt.BorderLayout.WEST);

        BestiaryPage_MonTypeGridBox.setLayout(new java.awt.GridLayout(22, 0));

        BestiaryPage_MonsterTagTitle.setText("Monster");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_MonsterTagTitle);

        BestiaryPage_Tag_Magical.setText("Magical");
        BestiaryPage_Tag_Magical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_Tag_MagicalActionPerformed(evt);
            }
        });
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Magical);

        BestiaryPage_Tag_Devious.setText("Devious");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Devious);

        BestiaryPage_Tag_Amorphous.setText("Amorphous");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Amorphous);

        BestiaryPage_Tag_Organized.setText("Organized");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Organized);

        BestiaryPage_Tag_Intelligent.setText("Intelligent");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Intelligent);

        BestiaryPage_Tag_Hoarder.setText("Hoarder");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Hoarder);

        BestiaryPage_Tag_Stealthy.setText("Stealthy");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Stealthy);

        BestiaryPage_Tag_Terrifying.setText("Terrifying");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Terrifying);

        BestiaryPage_Tag_Cautious.setText("Cautious");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Cautious);

        BestiaryPage_Tag_Construct.setText("Construct");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Construct);

        BestiaryPage_Tag_Planar.setText("Planar");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Planar);

        BestiaryPage_OrganizationLabel.setText("Organization");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_OrganizationLabel);

        BestiaryPage_OrgTags.add(BestiaryPage_Tag_Horde);
        BestiaryPage_Tag_Horde.setText("Horde");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Horde);

        BestiaryPage_OrgTags.add(BestiaryPage_Tag_Group);
        BestiaryPage_Tag_Group.setText("Group");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Group);

        BestiaryPage_OrgTags.add(BestiaryPage_Tag_Solitary);
        BestiaryPage_Tag_Solitary.setText("Solitary");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Solitary);

        BestiaryPage_SizeLabel.setText("Size");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_SizeLabel);

        BestiaryPage_SizeTags.add(BestiaryPage_Tag_Tiny);
        BestiaryPage_Tag_Tiny.setText("Tiny");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Tiny);

        BestiaryPage_SizeTags.add(BestiaryPage_Tag_Small);
        BestiaryPage_Tag_Small.setText("Small");
        BestiaryPage_Tag_Small.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_Tag_SmallActionPerformed(evt);
            }
        });
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Small);

        BestiaryPage_SizeTags.add(BestiaryPage_Tag_Normal);
        BestiaryPage_Tag_Normal.setText("Normal");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Normal);

        BestiaryPage_SizeTags.add(BestiaryPage_Tag_Large);
        BestiaryPage_Tag_Large.setText("Large");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Large);

        BestiaryPage_SizeTags.add(BestiaryPage_Tag_Huge);
        BestiaryPage_Tag_Huge.setText("Huge");
        BestiaryPage_MonTypeGridBox.add(BestiaryPage_Tag_Huge);

        BestiaryPage_MonTypeTopPane.add(BestiaryPage_MonTypeGridBox, java.awt.BorderLayout.CENTER);

        BestiaryPage_MonTypeScrollPane.setViewportView(BestiaryPage_MonTypeTopPane);

        BestiaryPage_MonsterTypesPane.add(BestiaryPage_MonTypeScrollPane, java.awt.BorderLayout.CENTER);

        BestiaryPage_MonsterTagsButtonBox.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        BestiaryPage_MonsterTypesClearSelectionsButton.setText("Clear Selections");
        BestiaryPage_MonsterTypesClearSelectionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BestiaryPage_MonsterTypesClearSelectionsButtonActionPerformed(evt);
            }
        });
        BestiaryPage_MonsterTagsButtonBox.add(BestiaryPage_MonsterTypesClearSelectionsButton);

        BestiaryPage_MonsterTypesPane.add(BestiaryPage_MonsterTagsButtonBox, java.awt.BorderLayout.SOUTH);

        BestiaryPage_TagsBox.add(BestiaryPage_MonsterTypesPane);

        BestiaryPage_RightSide.add(BestiaryPage_TagsBox, java.awt.BorderLayout.CENTER);

        BestiaryPage.add(BestiaryPage_RightSide, java.awt.BorderLayout.CENTER);

        ModeScreens.add(BestiaryPage, "BestiaryPage");

        MonsterFocus.setName("MonsterFocus"); // NOI18N
        MonsterFocus.setLayout(new java.awt.BorderLayout());

        MonsterFocus_Sidebar.setLayout(new java.awt.BorderLayout());

        MonsterFocus_UploadButtonBox.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        MonsterFocus_UploadButtonBox.setLayout(new java.awt.BorderLayout());

        MonsterFocus_UploadButton.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        MonsterFocus_UploadButton.setText("Upload To Codex");
        MonsterFocus_UploadButton.setActionCommand("<html>Upload To <br> Codex</html>");
        MonsterFocus_UploadButton.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        MonsterFocus_UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterFocus_UploadButtonActionPerformed(evt);
            }
        });
        MonsterFocus_UploadButtonBox.add(MonsterFocus_UploadButton, java.awt.BorderLayout.CENTER);
        MonsterFocus_UploadButtonBox.add(MonsterFocus_filler1, java.awt.BorderLayout.PAGE_START);
        MonsterFocus_UploadButtonBox.add(MonsterFocus_filler2, java.awt.BorderLayout.PAGE_END);
        MonsterFocus_UploadButtonBox.add(MonsterFocus_filler3, java.awt.BorderLayout.LINE_END);
        MonsterFocus_UploadButtonBox.add(MonsterFocus_filler4, java.awt.BorderLayout.LINE_START);

        MonsterFocus_Sidebar.add(MonsterFocus_UploadButtonBox, java.awt.BorderLayout.NORTH);

        MonsterFocus_CurrentCollectionsPane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        MonsterFocus_CurrentCollectionsPane.setLayout(new java.awt.BorderLayout());

        MonsterFocus_CurrentCollectionsLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        MonsterFocus_CurrentCollectionsLabel.setText("Current Collections:");
        MonsterFocus_CurrentCollectionsLabel.setPreferredSize(new java.awt.Dimension(172, 30));
        MonsterFocus_CurrentCollectionsPane.add(MonsterFocus_CurrentCollectionsLabel, java.awt.BorderLayout.PAGE_START);

        MonsterFocus_EditCollectionsButtonBox.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        MonsterFocus_EditCollectionsButton.setText("Edit Collections");
        MonsterFocus_EditCollectionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterFocus_EditCollectionsButtonActionPerformed(evt);
            }
        });
        MonsterFocus_EditCollectionsButtonBox.add(MonsterFocus_EditCollectionsButton);

        MonsterFocus_CurrentCollectionsPane.add(MonsterFocus_EditCollectionsButtonBox, java.awt.BorderLayout.PAGE_END);

        MonsterFocus_CurrentCollectionsList.setBackground(new java.awt.Color(238, 238, 238));
        MonsterFocus_CurrentCollectionsList.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        MonsterFocus_CurrentCollectionsList.setModel(MonsterFocus_ModelCollectionList);
        MonsterFocus_CurrentCollectionsScrollPane.setViewportView(MonsterFocus_CurrentCollectionsList);

        MonsterFocus_CurrentCollectionsPane.add(MonsterFocus_CurrentCollectionsScrollPane, java.awt.BorderLayout.CENTER);
        MonsterFocus_CurrentCollectionsPane.add(MonsterFocus_filler5, java.awt.BorderLayout.LINE_END);
        MonsterFocus_CurrentCollectionsPane.add(MonsterFocus_filler6, java.awt.BorderLayout.LINE_START);

        MonsterFocus_Sidebar.add(MonsterFocus_CurrentCollectionsPane, java.awt.BorderLayout.CENTER);

        MonsterFocus.add(MonsterFocus_Sidebar, java.awt.BorderLayout.LINE_END);

        MonsterFocus_GMNotePane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        MonsterFocus_GMNotePane.setLayout(new java.awt.BorderLayout());

        MonsterFocus_GMNotesTopPane.setLayout(new java.awt.BorderLayout());

        MonsterFocus_GMNotesTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        MonsterFocus_GMNotesTitle.setText("GM Notes:");
        MonsterFocus_GMNotesTitle.setPreferredSize(new java.awt.Dimension(91, 30));
        MonsterFocus_GMNotesTopPane.add(MonsterFocus_GMNotesTitle, java.awt.BorderLayout.PAGE_START);

        MonsterFocus_GMNotesScrollPane.setPreferredSize(new java.awt.Dimension(100, 150));
        MonsterFocus_GMNotesScrollPane.setSize(new java.awt.Dimension(100, 150));

        MonsterFocus_GMNotesText.setEditable(false);
        MonsterFocus_GMNotesText.setBackground(new java.awt.Color(238, 238, 238));
        MonsterFocus_GMNotesText.setColumns(20);
        MonsterFocus_GMNotesText.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        MonsterFocus_GMNotesText.setRows(5);
        MonsterFocus_GMNotesScrollPane.setViewportView(MonsterFocus_GMNotesText);

        MonsterFocus_GMNotesTopPane.add(MonsterFocus_GMNotesScrollPane, java.awt.BorderLayout.CENTER);
        MonsterFocus_GMNotesTopPane.add(MonsterFocus_filler7, java.awt.BorderLayout.LINE_END);
        MonsterFocus_GMNotesTopPane.add(MonsterFocus_filler8, java.awt.BorderLayout.LINE_START);

        MonsterFocus_GMNotePane.add(MonsterFocus_GMNotesTopPane, java.awt.BorderLayout.CENTER);

        MonsterFocus_EditNoteButtonBox.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        MonsterFocus_EditNoteButton.setText("Edit Note");
        MonsterFocus_EditNoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterFocus_EditNoteButtonActionPerformed(evt);
            }
        });
        MonsterFocus_EditNoteButtonBox.add(MonsterFocus_EditNoteButton);

        MonsterFocus_GMNotePane.add(MonsterFocus_EditNoteButtonBox, java.awt.BorderLayout.PAGE_END);

        MonsterFocus.add(MonsterFocus_GMNotePane, java.awt.BorderLayout.SOUTH);

        MonsterFocus_BackButtonBox.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        MonsterFocus_BackToBestiaryButton.setText("Back to Bestiary");
        MonsterFocus_BackToBestiaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterFocus_BackToBestiaryButtonActionPerformed(evt);
            }
        });
        MonsterFocus_BackButtonBox.add(MonsterFocus_BackToBestiaryButton);

        MonsterFocus.add(MonsterFocus_BackButtonBox, java.awt.BorderLayout.PAGE_START);

        MonsterFocus_MonsterPane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        MonsterFocus_MonsterPane.setLayout(new java.awt.BorderLayout());

        MonsterFocus_MainMonster.setBorder(null);
        MonsterFocus_MainMonster.setdAttackTags("Attack, Tags, Blah");
        MonsterFocus_MonsterPane.add(MonsterFocus_MainMonster, java.awt.BorderLayout.CENTER);

        MonsterFocus_EditMonsterPane.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        MonsterFocus_EditMonsterButton.setText("Edit Monster");
        MonsterFocus_EditMonsterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonsterFocus_EditMonsterButtonActionPerformed(evt);
            }
        });
        MonsterFocus_EditMonsterPane.add(MonsterFocus_EditMonsterButton);

        MonsterFocus_MonsterPane.add(MonsterFocus_EditMonsterPane, java.awt.BorderLayout.SOUTH);

        MonsterFocus.add(MonsterFocus_MonsterPane, java.awt.BorderLayout.CENTER);

        ModeScreens.add(MonsterFocus, "MonsterFocus");

        CodexPage.setName("CodexPage"); // NOI18N
        CodexPage.setLayout(new java.awt.BorderLayout());

        CodexPage_MainScrollPane.setBackground(new java.awt.Color(238, 238, 238));
        CodexPage_MainScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        CodexPage_MainScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        CodexPage_MainPane.setLayout(new java.awt.GridLayout(1, 2));

        CodexPage_PopularMonstersPane.setLayout(new java.awt.BorderLayout());
        CodexPage_PopularMonstersPane.add(CodexPage_filler1, java.awt.BorderLayout.EAST);
        CodexPage_PopularMonstersPane.add(CodexPage_filler2, java.awt.BorderLayout.WEST);

        CodexPage_PopularMonstersInternalPane.setLayout(new java.awt.GridLayout(5, 0, 0, 10));

        CodexPage_MonsterPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane1.setLayout(new java.awt.BorderLayout());

        CodexPage_MonsterCard1.setdArmor("1");
        CodexPage_MonsterCard1.setdAttack("Rusty sword (d10 damage)");
        CodexPage_MonsterCard1.setdAttackTags("Close, Near");
        CodexPage_MonsterCard1.setdHP("4");
        CodexPage_MonsterCard1.setdInstinct("To suprise the living");
        CodexPage_MonsterCard1.setdMonsterDescription("Poor Skeletons. The ultimate patsy of the undead, clattering along and knocked to pieces with the simplest blow. However, they are probably the smartest of the undead footsoldiers avaliable - they have a strange and canny knack for ambush and tend to enjoy laying traps for people. Having said that, they're still not very bright. The most common form of ambush is to hide in a barrel and wait for years until an adventurer passes by. Poor Skeletons.");
        CodexPage_MonsterCard1.setdMonsterName("Skeleton in a Barrel");
        CodexPage_MonsterCard1.setdMonsterTags("Solitary, Stealthy, Cautious");
        CodexPage_MonsterCard1.setdMoveList("<html>\n  <body>\n    <ul>\n      <li>\n        Ambush unsuspecting adventurers\n      </li>\n      <li>\n        Hide in the surroundings\n      </li>\n    </ul>\n  </body>\n</html>\n");
        CodexPage_MonsterCard1.setdQualities("");
        CodexPage_MonsterPane1.add(CodexPage_MonsterCard1, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton1.setText("Download");
        CodexPage_DownloadButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodexPage_DownloadButton1ActionPerformed(evt);
            }
        });
        CodexPage_DownloadButtonPane1.add(CodexPage_DownloadButton1);

        CodexPage_MonsterPane1.add(CodexPage_DownloadButtonPane1, java.awt.BorderLayout.SOUTH);

        CodexPage_PopularMonstersInternalPane.add(CodexPage_MonsterPane1);

        CodexPage_MonsterPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane2.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane2.add(CodexPage_MonsterCard2, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton2.setText("Download");
        CodexPage_DownloadButtonPane2.add(CodexPage_DownloadButton2);

        CodexPage_MonsterPane2.add(CodexPage_DownloadButtonPane2, java.awt.BorderLayout.SOUTH);

        CodexPage_PopularMonstersInternalPane.add(CodexPage_MonsterPane2);

        CodexPage_MonsterPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane3.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane3.add(CodexPage_MonsterCard3, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton3.setText("Download");
        CodexPage_DownloadButtonPane3.add(CodexPage_DownloadButton3);

        CodexPage_MonsterPane3.add(CodexPage_DownloadButtonPane3, java.awt.BorderLayout.SOUTH);

        CodexPage_PopularMonstersInternalPane.add(CodexPage_MonsterPane3);

        CodexPage_MonsterPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane4.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane4.add(CodexPage_MonsterCard4, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton4.setText("Download");
        CodexPage_DownloadButtonPane4.add(CodexPage_DownloadButton4);

        CodexPage_MonsterPane4.add(CodexPage_DownloadButtonPane4, java.awt.BorderLayout.SOUTH);

        CodexPage_PopularMonstersInternalPane.add(CodexPage_MonsterPane4);

        CodexPage_MonsterPane5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane5.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane5.add(CodexPage_MonsterCard5, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton5.setText("Download");
        CodexPage_DownloadButtonPane5.add(CodexPage_DownloadButton5);

        CodexPage_MonsterPane5.add(CodexPage_DownloadButtonPane5, java.awt.BorderLayout.SOUTH);

        CodexPage_PopularMonstersInternalPane.add(CodexPage_MonsterPane5);

        CodexPage_PopularMonstersPane.add(CodexPage_PopularMonstersInternalPane, java.awt.BorderLayout.CENTER);

        CodexPage_PopularMonstersTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        CodexPage_PopularMonstersTitle.setText("  Popular Monsters");
        CodexPage_PopularMonstersTitle.setPreferredSize(new java.awt.Dimension(151, 30));
        CodexPage_PopularMonstersPane.add(CodexPage_PopularMonstersTitle, java.awt.BorderLayout.NORTH);

        CodexPage_MainPane.add(CodexPage_PopularMonstersPane);

        CodexPage_RecentMonstersPane.setLayout(new java.awt.BorderLayout());
        CodexPage_RecentMonstersPane.add(CodexPage_filler3, java.awt.BorderLayout.WEST);
        CodexPage_RecentMonstersPane.add(CodexPage_filler4, java.awt.BorderLayout.EAST);

        CodexPage_RecentMonstersInternalPane.setLayout(new java.awt.GridLayout(5, 0, 0, 10));

        CodexPage_MonsterPane6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane6.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane6.add(CodexPage_MonsterCard6, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton6.setText("Download");
        CodexPage_DownloadButtonPane6.add(CodexPage_DownloadButton6);

        CodexPage_MonsterPane6.add(CodexPage_DownloadButtonPane6, java.awt.BorderLayout.SOUTH);

        CodexPage_RecentMonstersInternalPane.add(CodexPage_MonsterPane6);

        CodexPage_MonsterPane7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane7.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane7.add(CodexPage_MonsterCard7, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton7.setText("Download");
        CodexPage_DownloadButtonPane7.add(CodexPage_DownloadButton7);

        CodexPage_MonsterPane7.add(CodexPage_DownloadButtonPane7, java.awt.BorderLayout.SOUTH);

        CodexPage_RecentMonstersInternalPane.add(CodexPage_MonsterPane7);

        CodexPage_MonsterPane8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane8.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane8.add(CodexPage_MonsterCard8, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton8.setText("Download");
        CodexPage_DownloadButtonPane8.add(CodexPage_DownloadButton8);

        CodexPage_MonsterPane8.add(CodexPage_DownloadButtonPane8, java.awt.BorderLayout.SOUTH);

        CodexPage_RecentMonstersInternalPane.add(CodexPage_MonsterPane8);

        CodexPage_MonsterPane9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane9.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane9.add(CodexPage_MonsterCard9, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton9.setText("Download");
        CodexPage_DownloadButtonPane9.add(CodexPage_DownloadButton9);

        CodexPage_MonsterPane9.add(CodexPage_DownloadButtonPane9, java.awt.BorderLayout.SOUTH);

        CodexPage_RecentMonstersInternalPane.add(CodexPage_MonsterPane9);

        CodexPage_MonsterPane10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CodexPage_MonsterPane10.setLayout(new java.awt.BorderLayout());
        CodexPage_MonsterPane10.add(CodexPage_MonsterCard10, java.awt.BorderLayout.CENTER);

        CodexPage_DownloadButtonPane10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        CodexPage_DownloadButton10.setText("Download");
        CodexPage_DownloadButtonPane10.add(CodexPage_DownloadButton10);

        CodexPage_MonsterPane10.add(CodexPage_DownloadButtonPane10, java.awt.BorderLayout.SOUTH);

        CodexPage_RecentMonstersInternalPane.add(CodexPage_MonsterPane10);

        CodexPage_RecentMonstersPane.add(CodexPage_RecentMonstersInternalPane, java.awt.BorderLayout.CENTER);

        CodexPage_RecentMonstersTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        CodexPage_RecentMonstersTitle.setText("Recent Monsters");
        CodexPage_RecentMonstersTitle.setPreferredSize(new java.awt.Dimension(144, 30));
        CodexPage_RecentMonstersPane.add(CodexPage_RecentMonstersTitle, java.awt.BorderLayout.PAGE_START);

        CodexPage_MainPane.add(CodexPage_RecentMonstersPane);

        CodexPage_MainScrollPane.setViewportView(CodexPage_MainPane);

        CodexPage.add(CodexPage_MainScrollPane, java.awt.BorderLayout.CENTER);

        ModeScreens.add(CodexPage, "CodexPage");

        getContentPane().add(ModeScreens, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MonsterEdit_NewMoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_NewMoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonsterEdit_NewMoveActionPerformed

    private void MonsterEdit_NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_NameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonsterEdit_NameFieldActionPerformed

    private void MonsterEdit_AttackNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_AttackNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonsterEdit_AttackNameFieldActionPerformed

    private void AttTagWin_ThrownCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttTagWin_ThrownCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AttTagWin_ThrownCheckActionPerformed

    private void AttTagWin_ForcefulCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttTagWin_ForcefulCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AttTagWin_ForcefulCheckActionPerformed

    private void AttTagWin_PreciseCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttTagWin_PreciseCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AttTagWin_PreciseCheckActionPerformed

    private void MonTagWin_MagicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonTagWin_MagicalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonTagWin_MagicalActionPerformed

    private void MonTagWin_GroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonTagWin_GroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonTagWin_GroupActionPerformed

    private void BestiaryPage_Tag_MagicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_Tag_MagicalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BestiaryPage_Tag_MagicalActionPerformed

    private void BestiaryPage_Tag_SmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_Tag_SmallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BestiaryPage_Tag_SmallActionPerformed

    private void BestiaryPage_DummyCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_DummyCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BestiaryPage_DummyCheckActionPerformed

    private void MonsterSurvey_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterSurvey_BackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonsterSurvey_BackActionPerformed

    private void MonsterSurvey_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterSurvey_NextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MonsterSurvey_NextActionPerformed

    private void BestiaryPage_CollectionsClearSelectionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_CollectionsClearSelectionsButtonActionPerformed
        int max = this.BestiaryPage_CollectionsGridPane.getComponentCount();
        javax.swing.JCheckBox box;
        
        for(int i = 0; i < max; i++){
            box = (javax.swing.JCheckBox) this.BestiaryPage_CollectionsGridPane.getComponent(i);
            box.setSelected(false);
        }
        
        
    }//GEN-LAST:event_BestiaryPage_CollectionsClearSelectionsButtonActionPerformed

    private void BestiaryPage_MonsterTypesClearSelectionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_MonsterTypesClearSelectionsButtonActionPerformed
        this.BestiaryPage_Tag_Amorphous.setSelected(false);
        this.BestiaryPage_Tag_Cautious.setSelected(false);
        this.BestiaryPage_Tag_Construct.setSelected(false);
        this.BestiaryPage_Tag_Devious.setSelected(false);
        this.BestiaryPage_Tag_Group.setSelected(false);
        this.BestiaryPage_Tag_Hoarder.setSelected(false);
        this.BestiaryPage_Tag_Horde.setSelected(false);
        this.BestiaryPage_Tag_Huge.setSelected(false);
        this.BestiaryPage_Tag_Intelligent.setSelected(false);
        this.BestiaryPage_Tag_Large.setSelected(false);
        this.BestiaryPage_Tag_Magical.setSelected(false);
        this.BestiaryPage_Tag_Normal.setSelected(false);
        this.BestiaryPage_Tag_Organized.setSelected(false);
        this.BestiaryPage_Tag_Planar.setSelected(false);
        this.BestiaryPage_Tag_Small.setSelected(false);
        this.BestiaryPage_Tag_Solitary.setSelected(false);
        this.BestiaryPage_Tag_Stealthy.setSelected(false);
        this.BestiaryPage_Tag_Terrifying.setSelected(false);
        this.BestiaryPage_Tag_Tiny.setSelected(false);
    }//GEN-LAST:event_BestiaryPage_MonsterTypesClearSelectionsButtonActionPerformed

    private void ControlBar_MyBestiaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ControlBar_MyBestiaryButtonActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "BestiaryPage");
    }//GEN-LAST:event_ControlBar_MyBestiaryButtonActionPerformed

    private void ControlBar_NewMonsterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ControlBar_NewMonsterButtonActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "MonsterFocus");
    }//GEN-LAST:event_ControlBar_NewMonsterButtonActionPerformed

    private void ControlBar_CodexButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ControlBar_CodexButtonActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "CodexPage");
    }//GEN-LAST:event_ControlBar_CodexButtonActionPerformed

    private void BestiaryPage_MonsterViewButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_MonsterViewButton1ActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "MonsterFocus");
    }//GEN-LAST:event_BestiaryPage_MonsterViewButton1ActionPerformed

    private void BestiaryPage_MonsterViewButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_MonsterViewButton6ActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "MonsterFocus");
    }//GEN-LAST:event_BestiaryPage_MonsterViewButton6ActionPerformed

    private void BestiaryPage_MonsterViewButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_MonsterViewButton7ActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "MonsterFocus");
    }//GEN-LAST:event_BestiaryPage_MonsterViewButton7ActionPerformed

    private void BestiaryPage_MonsterViewButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_MonsterViewButton8ActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "MonsterFocus");
    }//GEN-LAST:event_BestiaryPage_MonsterViewButton8ActionPerformed

    private void BestiaryPage_MonsterViewButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BestiaryPage_MonsterViewButton9ActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "MonsterFocus");
    }//GEN-LAST:event_BestiaryPage_MonsterViewButton9ActionPerformed

    private void MonsterFocus_BackToBestiaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterFocus_BackToBestiaryButtonActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "BestiaryPage");
    }//GEN-LAST:event_MonsterFocus_BackToBestiaryButtonActionPerformed

    private void MonsterFocus_EditMonsterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterFocus_EditMonsterButtonActionPerformed
        this.MonsterEdit.setVisible(true);
    }//GEN-LAST:event_MonsterFocus_EditMonsterButtonActionPerformed

    private void MonsterEdit_MonsterTagsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_MonsterTagsButtonActionPerformed
        this.MonsterTagsWindow.setVisible(true);
    }//GEN-LAST:event_MonsterEdit_MonsterTagsButtonActionPerformed

    private void MonsterEdit_AttackTagsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_AttackTagsActionPerformed
        this.AttackTagsWindow.setVisible(true);
    }//GEN-LAST:event_MonsterEdit_AttackTagsActionPerformed

    private void MonsterEdit_RemoveMoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_RemoveMoveButtonActionPerformed
        if(this.MonsterEdit_MovesList.getSelectedIndices().length > 0){
            int[] tmp = this.MonsterEdit_MovesList.getSelectedIndices();
            int[] selectedIndices = this.MonsterEdit_MovesList.getSelectedIndices();
            
            for(int i = tmp.length-1; i>=0; i--){
                selectedIndices = this.MonsterEdit_MovesList.getSelectedIndices();
                MonsterEdit_ModelMoveList.removeElementAt(selectedIndices[i]);

            }
        }
    }//GEN-LAST:event_MonsterEdit_RemoveMoveButtonActionPerformed

    private void MonsterEdit_AddMoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_AddMoveButtonActionPerformed
        MonsterEdit_ModelMoveList.addElement(this.MonsterEdit_NewMove.getText());
        this.MonsterEdit_NewMove.setText("");
    }//GEN-LAST:event_MonsterEdit_AddMoveButtonActionPerformed

    private void MonsterEdit_CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_CancelButtonActionPerformed
        //Reset Window and don't save
        this.MonsterEdit.setVisible(false);
    }//GEN-LAST:event_MonsterEdit_CancelButtonActionPerformed

    private void MonsterEdit_SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterEdit_SaveButtonActionPerformed
        
        LargeMonsterCard card = this.MonsterFocus_MainMonster;
        card.setdMonsterName(this.MonsterEdit_NameField.getText());
        
        
        card.setdAttack(makeAttackString());
        
        card.setdAttackTags(makeAttackTagString());
        card.setdHP(this.MonsterEdit_HPValue.getValue().toString());
        card.setdInstinct(this.MonsterEdit_InstinctField.getText());
        card.setdMonsterDescription(this.MonsterEdit_DescriptionField.getText());
        card.setdArmor(this.MonsterEdit_ArmorValue.getValue().toString());
        card.setdMonsterTags(makeMonsterTagString());
        

        card.setdMoveList(makeMoveString());
        
        card.setdQualities(this.MonsterEdit_SpecialQualitiesField.getText());
        card.revalidate();
        this.MonsterEdit.setVisible(false);
    }//GEN-LAST:event_MonsterEdit_SaveButtonActionPerformed

    private void MonTagWin_SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonTagWin_SaveButtonActionPerformed
        //Save!
        this.MonsterTagsWindow.setVisible(false); 
    }//GEN-LAST:event_MonTagWin_SaveButtonActionPerformed

    private void MonTagWin_CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonTagWin_CancelButtonActionPerformed
        //Reset Window and don't save
        this.MonsterTagsWindow.setVisible(false); 
    }//GEN-LAST:event_MonTagWin_CancelButtonActionPerformed

    private void AttTagWin_CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttTagWin_CancelButtonActionPerformed
        //Reset Window and don't save
        this.AttackTagsWindow.setVisible(false);
    }//GEN-LAST:event_AttTagWin_CancelButtonActionPerformed

    private void AttTagWin_AttackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttTagWin_AttackButtonActionPerformed
        //Save!
        this.AttackTagsWindow.setVisible(false);
    }//GEN-LAST:event_AttTagWin_AttackButtonActionPerformed

    private void MonsterFocus_EditCollectionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterFocus_EditCollectionsButtonActionPerformed
        this.EditCollectionsWindow.setVisible(true);
    }//GEN-LAST:event_MonsterFocus_EditCollectionsButtonActionPerformed

    private void SetColWin_NewCollectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetColWin_NewCollectionButtonActionPerformed
        this.NameCollectionWindow.setVisible(true);
    }//GEN-LAST:event_SetColWin_NewCollectionButtonActionPerformed

    private void SetColWin_CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetColWin_CancelButtonActionPerformed
        this.EditCollectionsWindow.setVisible(false);
    }//GEN-LAST:event_SetColWin_CancelButtonActionPerformed

    private void SetColWin_SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetColWin_SaveButtonActionPerformed
        int max = this.SetColWin_GridPane.getComponentCount();
        javax.swing.JCheckBox box;
        
        MonsterFocus_ModelCollectionList.clear();
        
        for(int i = 0; i < max; i++){
            box = (javax.swing.JCheckBox) this.SetColWin_GridPane.getComponent(i);
            if(box.isSelected()){
                MonsterFocus_ModelCollectionList.addElement(box.getText());
            }
        }
        
        this.EditCollectionsWindow.setVisible(false);
        
    }//GEN-LAST:event_SetColWin_SaveButtonActionPerformed

    private void NameColWin_CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameColWin_CancelButtonActionPerformed
        this.NameCollectionWindow.setVisible(false);
    }//GEN-LAST:event_NameColWin_CancelButtonActionPerformed

    private void NameColWin_AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameColWin_AddButtonActionPerformed
        allCollections.add(this.NameColWin_NameField.getText());
        this.NameColWin_NameField.setText("");
        updateCollections();
        this.NameCollectionWindow.setVisible(false);
    }//GEN-LAST:event_NameColWin_AddButtonActionPerformed

    private void AddToColWin_NoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToColWin_NoButtonActionPerformed
        this.AddToCollectionsWindow.setVisible(false);
    }//GEN-LAST:event_AddToColWin_NoButtonActionPerformed

    private void AddToColWin_YesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToColWin_YesButtonActionPerformed
        this.AddToCollectionsWindow.setVisible(false);
        this.EditCollectionsWindow.setVisible(true);
    }//GEN-LAST:event_AddToColWin_YesButtonActionPerformed

    private void MonsterFocus_EditNoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterFocus_EditNoteButtonActionPerformed
        this.EditGMNoteWin_NoteText.setText(this.MonsterFocus_GMNotesText.getText());
        this.EditGMNoteWindow.setVisible(true);
    }//GEN-LAST:event_MonsterFocus_EditNoteButtonActionPerformed

    private void EditGMNoteWin_SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditGMNoteWin_SaveButtonActionPerformed
        this.MonsterFocus_GMNotesText.setText(this.EditGMNoteWin_NoteText.getText());
        this.EditGMNoteWin_NoteText.setText("");
        this.EditGMNoteWindow.setVisible(false);
    }//GEN-LAST:event_EditGMNoteWin_SaveButtonActionPerformed

    private void EditGMNoteWin_CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditGMNoteWin_CancelButtonActionPerformed
        this.EditGMNoteWin_NoteText.setText("");
        this.EditGMNoteWindow.setVisible(false);
    }//GEN-LAST:event_EditGMNoteWin_CancelButtonActionPerformed

    private void CodexPage_DownloadButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodexPage_DownloadButton1ActionPerformed
        this.DownConWin_MonsterName.setText("Skeleton in a Barrel");
        this.DownloadConfirmationWindow.setVisible(true);
    }//GEN-LAST:event_CodexPage_DownloadButton1ActionPerformed

    private void DownConWin_YesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownConWin_YesButtonActionPerformed
        this.DownloadConfirmationWindow.setVisible(false);
        this.DownloadCompleteWindow.setVisible(true);
    }//GEN-LAST:event_DownConWin_YesButtonActionPerformed

    private void DownCompWin_OkayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownCompWin_OkayButtonActionPerformed
        java.awt.CardLayout cl = (java.awt.CardLayout)(this.ModeScreens.getLayout());
        cl.show(this.ModeScreens, "MonsterFocus");
        this.DownloadCompleteWindow.setVisible(false);
    }//GEN-LAST:event_DownCompWin_OkayButtonActionPerformed

    private void UploadConWin_YesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadConWin_YesButtonActionPerformed
        this.UploadConfirmationWindow.setVisible(false);
        this.LoginWindow.setVisible(true);
    }//GEN-LAST:event_UploadConWin_YesButtonActionPerformed

    private void LoginWin_UsernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginWin_UsernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginWin_UsernameFieldActionPerformed

    private void LoginWin_OkayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginWin_OkayButtonActionPerformed
        this.LoginWindow.setVisible(false);
        this.UploadCompleteWindow.setVisible(true);
    }//GEN-LAST:event_LoginWin_OkayButtonActionPerformed

    private void UploadCompWin_OkayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadCompWin_OkayButtonActionPerformed
        this.UploadCompleteWindow.setVisible(false);
    }//GEN-LAST:event_UploadCompWin_OkayButtonActionPerformed

    private void MonsterFocus_UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonsterFocus_UploadButtonActionPerformed
        this.UploadConWin_MonsterName.setText(this.MonsterFocus_MainMonster.getdMonsterName());
        this.UploadConfirmationWindow.setVisible(true);
    }//GEN-LAST:event_MonsterFocus_UploadButtonActionPerformed

    private void UploadConWin_NoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadConWin_NoButtonActionPerformed
        this.UploadConfirmationWindow.setVisible(false);
    }//GEN-LAST:event_UploadConWin_NoButtonActionPerformed

    private void DownConWin_NoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownConWin_NoButtonActionPerformed
        this.DownloadConfirmationWindow.setVisible(false);
    }//GEN-LAST:event_DownConWin_NoButtonActionPerformed

    private void LoginWin_CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginWin_CancelButtonActionPerformed
        this.LoginWindow.setVisible(false);
    }//GEN-LAST:event_LoginWin_CancelButtonActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BestiaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BestiaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BestiaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BestiaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BestiaryGUI().setVisible(true);
            }
        });
    }
    
    private void updateCollections(){
        
        this.SetColWin_GridPane.removeAll();
        this.BestiaryPage_CollectionsGridPane.removeAll();
        
        java.awt.Dimension setD = new java.awt.Dimension(300, 0);
        int rowHeight = 30;

        this.SetColWin_GridPane.setPreferredSize(null);
        
        for(String s : allCollections){
            setD.setSize(setD.width, setD.height + rowHeight);
            this.SetColWin_GridPane.add(new javax.swing.JCheckBox(s));
            this.BestiaryPage_CollectionsGridPane.add(new javax.swing.JCheckBox(s));
        }
        
        this.SetColWin_GridPane.setSize(setD);
        this.BestiaryPage_CollectionsGridPane.setSize(setD);
        
        this.SetColWin_GridPane.validate();
        this.BestiaryPage_CollectionsGridPane.validate();
        
    }
    
    private void loadBlackBeastLarge(LargeMonsterCard card){
        card.setdMonsterName("The Legendary Black Beast of Aaaaarrrrrrggghhh");
        card.setdAttack("Bite (d12 +7 damage)");
        card.setdAttackTags("Reach, Forceful, Ignores Armor");
        card.setdHP("28");
        card.setdInstinct("To devour");
        card.setdMonsterDescription("It lives within its cave devouring any"
                + " adventurer who has the misfortune of wandering through.");
        card.setdArmor("2");
        card.setdMonsterTags("Solitary, Huge, Construct, Terrifying");
        card.setdMoveList("<html><body><ul><li>Frighten adventurers</li></ul></body> </html>");
        card.setdQualities("Drawn into being by the animator, It has many eyes and fearsome horns");
        card.revalidate();
    }
    
    private void loadBlackBeastSmall(MiniMonsterCard card){
        card.setdMonsterName("The Legendary Black Beast of Aaaaarrrrrrggghhh");
        card.setdAttack("Bite (d12 +7 damage)");
        card.setdAttackTags("Reach, Forceful, Ignores Armor");
        card.setdHP("28");
        card.setdInstinct("To devour");
        card.setdMonsterDescription("It lives within its cave devouring any"
                + " adventurer who has the misfortune of wandering through.");
        card.setdArmor("2");
        card.setdMonsterTags("Solitary, Huge, Construct, Terrifying");
        card.setdMoveList("<html><body><ul><li>Frighten adventurers</li></ul></body> </html>");
        card.setdQualities("Drawn into being by the animator, It has many eyes and fearsome horns");
        card.revalidate();
    }
    
    private void loadCrocLarge(LargeMonsterCard card){
        card.setdMonsterName("Laser Crocodile");
        card.setdAttack("Laser Blast (d10 +3)");
        card.setdAttackTags("Reach, Range");
        card.setdHP("10");
        card.setdInstinct("To Eat");
        card.setdMonsterDescription("It's a really big crocodile... with a laser mounted on its back.");
        card.setdArmor("2");
        card.setdMonsterTags("Group, Large");
        card.setdMoveList("<html>   <body>     <ul>       <li>         "
                + "Drag victim under water       </li>       <li>         "
                + "Escape into water       </li>       <li>         "
                + "Grasping bite      </li>     </ul>   </body> </html> ");
        card.setdQualities("Amphibious, camouflage");
        card.revalidate();
    }
    
    private void loadCrocSmall(MiniMonsterCard card){
        card.setdMonsterName("Laser Crocodile");
        card.setdAttack("Laser Blast (d10 +3)");
        card.setdAttackTags("Reach, Range");
        card.setdHP("10");
        card.setdInstinct("To Eat");
        card.setdMonsterDescription("It's a really big crocodile... with a laser mounted on its back.");
        card.setdArmor("2");
        card.setdMonsterTags("Group, Large");
        card.setdMoveList("<html>   <body>     <ul>       <li>         "
                + "Drag victim under water       </li>       <li>         "
                + "Escape into water       </li>       <li>         "
                + "Grasping bite      </li>     </ul>   </body> </html> ");
        card.setdQualities("Amphibious, camouflage");
        card.revalidate();
    }
    
    private void loadSkelLarge(LargeMonsterCard card){
        card.setdMonsterName("Skeleton in a Barrel");
        card.setdAttack("Rusty Sword (d10 damage)");
        card.setdAttackTags("Close, Near");
        card.setdHP("4");
        card.setdInstinct("To suprise the living");
        card.setdMonsterDescription("Poor Skeletons. The ultimate patsy"
                + " of the undead, clattering along and knocked to pieces with the simplest blow."
                + " However, they are probably the smartest of the undead footsoldiers avaliable "
                + "- they have a strange and canny knack for ambush and tend to enjoy laying "
                + "traps for people. Having said that, they're still not very bright. The most "
                + "common form of ambush is to hide in a barrel and wait for years until an "
                + "adventurer passes by. Poor Skeletons.");
        card.setdArmor("1");
        card.setdMonsterTags("Solitary, Stealthy");
        card.setdMoveList("<html>   <body>     <ul>       <li>         "
                + "Ambush unsuspecting adventurers       </li>       <li>         "
                + "Hide in the surroundings       </li>     </ul>   </body> </html> ");
        card.setdQualities("");
        card.revalidate();

    }
    
    private void loadSkelSmall(MiniMonsterCard card){
        card.setdMonsterName("Skeleton in a Barrel");
        card.setdAttack("Rusty Sword (d10 damage)");
        card.setdAttackTags("Close, Near");
        card.setdHP("4");
        card.setdInstinct("To suprise the living");
        card.setdMonsterDescription("Poor Skeletons. The ultimate patsy"
                + " of the undead, clattering along and knocked to pieces with the simplest blow."
                + " However, they are probably the smartest of the undead footsoldiers avaliable "
                + "- they have a strange and canny knack for ambush and tend to enjoy laying "
                + "traps for people. Having said that, they're still not very bright. The most "
                + "common form of ambush is to hide in a barrel and wait for years until an "
                + "adventurer passes by. Poor Skeletons.");
        card.setdArmor("1");
        card.setdMonsterTags("Solitary, Stealthy");
        card.setdMoveList("<html>   <body>     <ul>       <li>         "
                + "Ambush unsuspecting adventurers       </li>       <li>         "
                + "Hide in the surroundings       </li>     </ul>   </body> </html> ");
        card.setdQualities("");
        card.revalidate();

    }
    
    private String makeAttackString(){
        String attackText = this.MonsterEdit_AttackNameField.getText();
        
        if(this.MonsterEdit_Rolls.getSelectedItem().equals("Normal")){
            attackText = attackText + " (" + this.MonsterEdit_Dice.getSelectedItem();
        }else if(this.MonsterEdit_Rolls.getSelectedItem().equals("Best of 2")){
            attackText = attackText + " (b[" + this.MonsterEdit_Dice.getSelectedItem() + "]";
        }else if(this.MonsterEdit_Rolls.getSelectedItem().equals("Worst of 2")){
            attackText = attackText + " (w[" + this.MonsterEdit_Dice.getSelectedItem() + "]";
        }
        
        Integer mod = (Integer) this.MonsterEdit_AttackMod.getValue();
        
        if(mod < 0){
            attackText = attackText + mod + " damage)";
        }else if (mod == 0){
            attackText = attackText + " damage)";
        }else{
            attackText = attackText + "+" + mod + " damage)";
        }
        return attackText;
    }
    
    private String makeMoveString(){
        
        String moveText = "<html><body><ul>";
        javax.swing.ListModel m = this.MonsterEdit_MovesList.getModel();
        int len = m.getSize();
        for(int i = 0; i < len; i++){
            moveText = moveText + "<li>" + m.getElementAt(i) + "</li>";
        }
        moveText = moveText + "</ul></body> </html>"; 
        
        return moveText;
        
    }
    
    private String makeAttackTagString(){
        
        String s = "";
        
        if(this.AttTagWin_AmmoCheck.isSelected()){
            Integer numAmmo = (Integer)AttTagWin_AmmoSpin.getValue();
            s = appendTag(s, numAmmo.toString() + " Ammo");
        }
        
        if(this.AttTagWin_CloseCheck.isSelected()){
            s = appendTag(s, "Close");
        }
        
        if(AttTagWin_FarCheck.isSelected()){
            s = appendTag(s, "Far");
        }
        
        if(AttTagWin_ForcefulCheck.isSelected()){
            s = appendTag(s, "Forceful");
        }
        
        if(AttTagWin_HandCheck.isSelected()){
            s = appendTag(s, "Hand");
        }
        
        if(AttTagWin_IgnoresArmorCheck.isSelected()){
            s = appendTag(s, "Ignores Armor");
        }
        
        if(AttTagWin_MessyCheck.isSelected()){
            s = appendTag(s, "Messy");
        }
        
        if(AttTagWin_NearCheck.isSelected()){
            s = appendTag(s, "Near");
        }
        
        if(AttTagWin_PiercingCheck.isSelected()){
            Integer pirAmmo = (Integer) AttTagWin_PiercingSpin.getValue();
            s = appendTag(s, pirAmmo.toString() + " Piercing");
        }
        
        if(AttTagWin_PreciseCheck.isSelected()){
            s = appendTag(s, "Percise");
        }
        
        if(AttTagWin_ReachChange.isSelected()){
            s = appendTag(s, "Reach");
        }
        
        if(AttTagWin_ReloadCheck.isSelected()){
            s = appendTag(s, "Reload");
        }
        
        if(AttTagWin_StunCheck.isSelected()){
            s = appendTag(s, "Stun");
        }
        
        if(AttTagWin_ThrownCheck.isSelected()){
            s = appendTag(s, "Thrown");
        }
        
        return s;
    }
    
    private String makeMonsterTagString(){
        String s = "";
        
        if(this.MonTagWin_Amorphous.isSelected()){
            s = appendTag(s, "Amorphous");
        }
        
        if(this.MonTagWin_Cautious.isSelected()){
            s = appendTag(s, "Cautious");
        }
        
        if(this.MonTagWin_Construct.isSelected()){
            s = appendTag(s, "Construct");
        }
        
        if(this.MonTagWin_Devious.isSelected()){
            s = appendTag(s, "Devious");
        }
        
        if(this.MonTagWin_Group.isSelected()){
            s = appendTag(s, "Group");
        }
        
        if(this.MonTagWin_Hoarder.isSelected()){
            s = appendTag(s, "Hoarder");
        }
        
        if(this.MonTagWin_Horde.isSelected()){
            s = appendTag(s, "Horde");
        }
        
        if(this.MonTagWin_Huge.isSelected()){
            s = appendTag(s, "Huge");
        }
        
        if(this.MonTagWin_Intelligent.isSelected()){
            s = appendTag(s, "Intelligent");
        }
        
        if(this.MonTagWin_Large.isSelected()){
            s = appendTag(s, "Large");
        }
        
        if(this.MonTagWin_Magical.isSelected()){
            s = appendTag(s, "Magical");
        }
        
        if(this.MonTagWin_Normal.isSelected()){
            //Normal is not actually a valid DW tag
        }
        
        if(this.MonTagWin_Organized.isSelected()){
            s = appendTag(s, "Organized");
        }
        
        if(this.MonTagWin_Planar.isSelected()){
            s = appendTag(s, "Planar");
        }
        
        if(this.MonTagWin_Small.isSelected()){
            s = appendTag(s, "Small");
        }
        
        if(this.MonTagWin_Solitary.isSelected()){
            s = appendTag(s, "Solitary");
        }
        
        if(this.MonTagWin_Stealthy.isSelected()){
            s = appendTag(s, "Stealthy");
        }
        
        if(this.MonTagWin_Terrifying.isSelected()){
            s = appendTag(s, "Terrifying");
        }
        
        if(this.MonTagWin_Tiny.isSelected()){
            s = appendTag(s, "Tiny");
        }
        return s;
    }
    
    private String appendTag(String str, String tag){
        if(str.equals("")){
            str = tag;
        }else{
            str = str + ", " + tag;
        }
        return str;
    }
    
    private javax.swing.DefaultListModel MonsterEdit_ModelMoveList;
    private javax.swing.DefaultListModel MonsterFocus_ModelCollectionList;
    private java.util.TreeSet<String> allCollections;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddGMNotesWin_ButtonPanel;
    private javax.swing.JLabel AddGMNotesWin_Label;
    private javax.swing.JPanel AddGMNotesWin_MainPanel;
    private javax.swing.JButton AddGMNotesWin_NoButton;
    private javax.swing.JButton AddGMNotesWin_YesButton;
    private javax.swing.Box.Filler AddGMNotesWin_filler1;
    private javax.swing.Box.Filler AddGMNotesWin_filler3;
    private javax.swing.Box.Filler AddGMNotesWin_filler4;
    private javax.swing.JDialog AddGMNotesWindow;
    private javax.swing.JPanel AddToColWin_ButtonPanel;
    private javax.swing.JLabel AddToColWin_Label;
    private javax.swing.JButton AddToColWin_NoButton;
    private javax.swing.JButton AddToColWin_YesButton;
    private javax.swing.Box.Filler AddToColWin_filler1;
    private javax.swing.Box.Filler AddToColWin_filler2;
    private javax.swing.Box.Filler AddToColWin_filler3;
    private javax.swing.JDialog AddToCollectionsWindow;
    private javax.swing.JPanel AttTagWin_AmmoBox;
    private javax.swing.JCheckBox AttTagWin_AmmoCheck;
    private javax.swing.JLabel AttTagWin_AmmoLabel;
    private javax.swing.JSpinner AttTagWin_AmmoSpin;
    private javax.swing.JButton AttTagWin_AttackButton;
    private javax.swing.JPanel AttTagWin_ButtonBox;
    private javax.swing.JButton AttTagWin_CancelButton;
    private javax.swing.JCheckBox AttTagWin_CloseCheck;
    private javax.swing.JCheckBox AttTagWin_FarCheck;
    private javax.swing.JCheckBox AttTagWin_ForcefulCheck;
    private javax.swing.JPanel AttTagWin_GridPane;
    private javax.swing.JCheckBox AttTagWin_HandCheck;
    private javax.swing.JCheckBox AttTagWin_IgnoresArmorCheck;
    private javax.swing.JLabel AttTagWin_MainLabel;
    private javax.swing.JPanel AttTagWin_MainPane;
    private javax.swing.JCheckBox AttTagWin_MessyCheck;
    private javax.swing.JCheckBox AttTagWin_NearCheck;
    private javax.swing.JPanel AttTagWin_PiercingBox;
    private javax.swing.JCheckBox AttTagWin_PiercingCheck;
    private javax.swing.JLabel AttTagWin_PiercingLabel;
    private javax.swing.JSpinner AttTagWin_PiercingSpin;
    private javax.swing.JCheckBox AttTagWin_PreciseCheck;
    private javax.swing.JCheckBox AttTagWin_ReachChange;
    private javax.swing.JCheckBox AttTagWin_ReloadCheck;
    private javax.swing.JCheckBox AttTagWin_StunCheck;
    private javax.swing.JCheckBox AttTagWin_ThrownCheck;
    private javax.swing.Box.Filler AttTagWin_filler1;
    private javax.swing.Box.Filler AttTagWin_filler2;
    private javax.swing.Box.Filler AttTagWin_filler3;
    private javax.swing.Box.Filler AttTagWin_filler4;
    private javax.swing.JDialog AttackTagsWindow;
    private javax.swing.JPanel BestiaryPage;
    private javax.swing.JPanel BestiaryPage_CardPane;
    private javax.swing.JPanel BestiaryPage_CollectionsClearSelButtonBox;
    private javax.swing.JButton BestiaryPage_CollectionsClearSelectionsButton;
    private javax.swing.JPanel BestiaryPage_CollectionsGridPane;
    private javax.swing.JScrollPane BestiaryPage_CollectionsScrollPane;
    private javax.swing.JPanel BestiaryPage_CollectionsTagPane;
    private javax.swing.JLabel BestiaryPage_CollectionsTitle;
    private javax.swing.JPanel BestiaryPage_CollectionsTopPane;
    private javax.swing.JCheckBox BestiaryPage_DummyCheck;
    private javax.swing.JCheckBox BestiaryPage_DummyCheck2;
    private javax.swing.JButton BestiaryPage_FilterButton;
    private javax.swing.JPanel BestiaryPage_FilterButtonBox;
    private javax.swing.JPanel BestiaryPage_LeftSide;
    private javax.swing.JPanel BestiaryPage_MonTypeGridBox;
    private javax.swing.JScrollPane BestiaryPage_MonTypeScrollPane;
    private javax.swing.JPanel BestiaryPage_MonTypeTopPane;
    private javax.swing.JPanel BestiaryPage_MonsterButtonBox1;
    private javax.swing.JPanel BestiaryPage_MonsterButtonBox6;
    private javax.swing.JPanel BestiaryPage_MonsterButtonBox7;
    private javax.swing.JPanel BestiaryPage_MonsterButtonBox8;
    private javax.swing.JPanel BestiaryPage_MonsterButtonBox9;
    private LargeMonsterCard BestiaryPage_MonsterCard1;
    private LargeMonsterCard BestiaryPage_MonsterCard6;
    private LargeMonsterCard BestiaryPage_MonsterCard7;
    private LargeMonsterCard BestiaryPage_MonsterCard8;
    private LargeMonsterCard BestiaryPage_MonsterCard9;
    private javax.swing.JPanel BestiaryPage_MonsterPane1;
    private javax.swing.JPanel BestiaryPage_MonsterPane2;
    private javax.swing.JPanel BestiaryPage_MonsterPane3;
    private javax.swing.JPanel BestiaryPage_MonsterPane4;
    private javax.swing.JPanel BestiaryPage_MonsterPane5;
    private javax.swing.JScrollPane BestiaryPage_MonsterScrollPane;
    private javax.swing.JLabel BestiaryPage_MonsterTagTitle;
    private javax.swing.JPanel BestiaryPage_MonsterTagsButtonBox;
    private javax.swing.JLabel BestiaryPage_MonsterTagsTitle;
    private javax.swing.JButton BestiaryPage_MonsterTypesClearSelectionsButton;
    private javax.swing.JPanel BestiaryPage_MonsterTypesPane;
    private javax.swing.JButton BestiaryPage_MonsterViewButton1;
    private javax.swing.JButton BestiaryPage_MonsterViewButton6;
    private javax.swing.JButton BestiaryPage_MonsterViewButton7;
    private javax.swing.JButton BestiaryPage_MonsterViewButton8;
    private javax.swing.JButton BestiaryPage_MonsterViewButton9;
    private javax.swing.ButtonGroup BestiaryPage_OrgTags;
    private javax.swing.JLabel BestiaryPage_OrganizationLabel;
    private javax.swing.JPanel BestiaryPage_RightSide;
    private javax.swing.JLabel BestiaryPage_SizeLabel;
    private javax.swing.ButtonGroup BestiaryPage_SizeTags;
    private javax.swing.JCheckBox BestiaryPage_Tag_Amorphous;
    private javax.swing.JCheckBox BestiaryPage_Tag_Cautious;
    private javax.swing.JCheckBox BestiaryPage_Tag_Construct;
    private javax.swing.JCheckBox BestiaryPage_Tag_Devious;
    private javax.swing.JCheckBox BestiaryPage_Tag_Group;
    private javax.swing.JCheckBox BestiaryPage_Tag_Hoarder;
    private javax.swing.JCheckBox BestiaryPage_Tag_Horde;
    private javax.swing.JCheckBox BestiaryPage_Tag_Huge;
    private javax.swing.JCheckBox BestiaryPage_Tag_Intelligent;
    private javax.swing.JCheckBox BestiaryPage_Tag_Large;
    private javax.swing.JCheckBox BestiaryPage_Tag_Magical;
    private javax.swing.JCheckBox BestiaryPage_Tag_Normal;
    private javax.swing.JCheckBox BestiaryPage_Tag_Organized;
    private javax.swing.JCheckBox BestiaryPage_Tag_Planar;
    private javax.swing.JCheckBox BestiaryPage_Tag_Small;
    private javax.swing.JCheckBox BestiaryPage_Tag_Solitary;
    private javax.swing.JCheckBox BestiaryPage_Tag_Stealthy;
    private javax.swing.JCheckBox BestiaryPage_Tag_Terrifying;
    private javax.swing.JCheckBox BestiaryPage_Tag_Tiny;
    private javax.swing.JPanel BestiaryPage_TagsBox;
    private javax.swing.Box.Filler BestiaryPage_filler1;
    private javax.swing.Box.Filler BestiaryPage_filler2;
    private javax.swing.Box.Filler BestiaryPage_filler3;
    private javax.swing.Box.Filler BestiaryPage_filler4;
    private javax.swing.Box.Filler BestiaryPage_filler5;
    private javax.swing.Box.Filler BestiaryPage_filler6;
    private javax.swing.JPanel CodexPage;
    private javax.swing.JButton CodexPage_DownloadButton1;
    private javax.swing.JButton CodexPage_DownloadButton10;
    private javax.swing.JButton CodexPage_DownloadButton2;
    private javax.swing.JButton CodexPage_DownloadButton3;
    private javax.swing.JButton CodexPage_DownloadButton4;
    private javax.swing.JButton CodexPage_DownloadButton5;
    private javax.swing.JButton CodexPage_DownloadButton6;
    private javax.swing.JButton CodexPage_DownloadButton7;
    private javax.swing.JButton CodexPage_DownloadButton8;
    private javax.swing.JButton CodexPage_DownloadButton9;
    private javax.swing.JPanel CodexPage_DownloadButtonPane1;
    private javax.swing.JPanel CodexPage_DownloadButtonPane10;
    private javax.swing.JPanel CodexPage_DownloadButtonPane2;
    private javax.swing.JPanel CodexPage_DownloadButtonPane3;
    private javax.swing.JPanel CodexPage_DownloadButtonPane4;
    private javax.swing.JPanel CodexPage_DownloadButtonPane5;
    private javax.swing.JPanel CodexPage_DownloadButtonPane6;
    private javax.swing.JPanel CodexPage_DownloadButtonPane7;
    private javax.swing.JPanel CodexPage_DownloadButtonPane8;
    private javax.swing.JPanel CodexPage_DownloadButtonPane9;
    private javax.swing.JPanel CodexPage_MainPane;
    private javax.swing.JScrollPane CodexPage_MainScrollPane;
    private MiniMonsterCard CodexPage_MonsterCard1;
    private MiniMonsterCard CodexPage_MonsterCard10;
    private MiniMonsterCard CodexPage_MonsterCard2;
    private MiniMonsterCard CodexPage_MonsterCard3;
    private MiniMonsterCard CodexPage_MonsterCard4;
    private MiniMonsterCard CodexPage_MonsterCard5;
    private MiniMonsterCard CodexPage_MonsterCard6;
    private MiniMonsterCard CodexPage_MonsterCard7;
    private MiniMonsterCard CodexPage_MonsterCard8;
    private MiniMonsterCard CodexPage_MonsterCard9;
    private javax.swing.JPanel CodexPage_MonsterPane1;
    private javax.swing.JPanel CodexPage_MonsterPane10;
    private javax.swing.JPanel CodexPage_MonsterPane2;
    private javax.swing.JPanel CodexPage_MonsterPane3;
    private javax.swing.JPanel CodexPage_MonsterPane4;
    private javax.swing.JPanel CodexPage_MonsterPane5;
    private javax.swing.JPanel CodexPage_MonsterPane6;
    private javax.swing.JPanel CodexPage_MonsterPane7;
    private javax.swing.JPanel CodexPage_MonsterPane8;
    private javax.swing.JPanel CodexPage_MonsterPane9;
    private javax.swing.JPanel CodexPage_PopularMonstersInternalPane;
    private javax.swing.JPanel CodexPage_PopularMonstersPane;
    private javax.swing.JLabel CodexPage_PopularMonstersTitle;
    private javax.swing.JPanel CodexPage_RecentMonstersInternalPane;
    private javax.swing.JPanel CodexPage_RecentMonstersPane;
    private javax.swing.JLabel CodexPage_RecentMonstersTitle;
    private javax.swing.Box.Filler CodexPage_filler1;
    private javax.swing.Box.Filler CodexPage_filler2;
    private javax.swing.Box.Filler CodexPage_filler3;
    private javax.swing.Box.Filler CodexPage_filler4;
    private javax.swing.JPanel ControlBar;
    private javax.swing.JButton ControlBar_CodexButton;
    private javax.swing.JLabel ControlBar_MainTitle;
    private javax.swing.JPanel ControlBar_ModeButtonBox;
    private javax.swing.JButton ControlBar_MyBestiaryButton;
    private javax.swing.JButton ControlBar_NewMonsterButton;
    private javax.swing.Box.Filler ControlBar_filler1;
    private javax.swing.JPanel DownCompWin_ButtonPanel;
    private javax.swing.JLabel DownCompWin_Label;
    private javax.swing.JPanel DownCompWin_MainPanel;
    private javax.swing.JButton DownCompWin_OkayButton;
    private javax.swing.Box.Filler DownCompWin_filler7;
    private javax.swing.Box.Filler DownCompWin_filler8;
    private javax.swing.Box.Filler DownCompWin_filler9;
    private javax.swing.JPanel DownConWin_ButtonPanel;
    private javax.swing.JLabel DownConWin_Label1;
    private javax.swing.JLabel DownConWin_Label2;
    private javax.swing.JPanel DownConWin_MainPanel;
    private javax.swing.JLabel DownConWin_MonsterName;
    private javax.swing.JButton DownConWin_NoButton;
    private javax.swing.JPanel DownConWin_TextPane;
    private javax.swing.JButton DownConWin_YesButton;
    private javax.swing.Box.Filler DownConWin_filler2;
    private javax.swing.Box.Filler DownConWin_filler5;
    private javax.swing.Box.Filler DownConWin_filler6;
    private javax.swing.JDialog DownloadCompleteWindow;
    private javax.swing.JDialog DownloadConfirmationWindow;
    private javax.swing.JDialog EditCollectionsWindow;
    private javax.swing.JPanel EditGMNoteWin_ButtonPanel;
    private javax.swing.JButton EditGMNoteWin_CancelButton;
    private javax.swing.JLabel EditGMNoteWin_Label;
    private javax.swing.JPanel EditGMNoteWin_MainPanel;
    private javax.swing.JTextArea EditGMNoteWin_NoteText;
    private javax.swing.JButton EditGMNoteWin_SaveButton;
    private javax.swing.JScrollPane EditGMNoteWin_ScrollPane;
    private javax.swing.Box.Filler EditGMNoteWin_filler1;
    private javax.swing.Box.Filler EditGMNoteWin_filler2;
    private javax.swing.Box.Filler EditGMNoteWin_filler3;
    private javax.swing.JDialog EditGMNoteWindow;
    private javax.swing.JPanel LoginWin_ButtonPanel;
    private javax.swing.JButton LoginWin_CancelButton;
    private javax.swing.JPanel LoginWin_FieldPane;
    private javax.swing.JLabel LoginWin_Label;
    private javax.swing.JPanel LoginWin_MainPanel;
    private javax.swing.JButton LoginWin_OkayButton;
    private javax.swing.JPasswordField LoginWin_PasswordField;
    private javax.swing.JLabel LoginWin_PasswordLabel;
    private javax.swing.JPanel LoginWin_PasswordPane;
    private javax.swing.JTextField LoginWin_UsernameField;
    private javax.swing.JLabel LoginWin_UsernameLabel;
    private javax.swing.JPanel LoginWin_UsernamePanel;
    private javax.swing.Box.Filler LoginWin_filler1;
    private javax.swing.Box.Filler LoginWin_filler2;
    private javax.swing.Box.Filler LoginWin_filler3;
    private javax.swing.Box.Filler LoginWin_filler4;
    private javax.swing.JDialog LoginWindow;
    private javax.swing.JPanel ModeScreens;
    private javax.swing.ButtonGroup ModeToggle;
    private javax.swing.JCheckBox MonTagWin_Amorphous;
    private javax.swing.JPanel MonTagWin_ButtonPane;
    private javax.swing.JButton MonTagWin_CancelButton;
    private javax.swing.JCheckBox MonTagWin_Cautious;
    private javax.swing.JCheckBox MonTagWin_Construct;
    private javax.swing.JCheckBox MonTagWin_Devious;
    private javax.swing.JPanel MonTagWin_GridPane;
    private javax.swing.JRadioButton MonTagWin_Group;
    private javax.swing.JCheckBox MonTagWin_Hoarder;
    private javax.swing.JRadioButton MonTagWin_Horde;
    private javax.swing.JRadioButton MonTagWin_Huge;
    private javax.swing.JCheckBox MonTagWin_Intelligent;
    private javax.swing.JRadioButton MonTagWin_Large;
    private javax.swing.JCheckBox MonTagWin_Magical;
    private javax.swing.JPanel MonTagWin_MainPane;
    private javax.swing.JLabel MonTagWin_MonsterTagsLabel;
    private javax.swing.JRadioButton MonTagWin_Normal;
    private javax.swing.JLabel MonTagWin_OrgTagsLabel;
    private javax.swing.JCheckBox MonTagWin_Organized;
    private javax.swing.JCheckBox MonTagWin_Planar;
    private javax.swing.JButton MonTagWin_SaveButton;
    private javax.swing.JLabel MonTagWin_SizeTagsLabel;
    private javax.swing.JRadioButton MonTagWin_Small;
    private javax.swing.JRadioButton MonTagWin_Solitary;
    private javax.swing.JCheckBox MonTagWin_Stealthy;
    private javax.swing.JCheckBox MonTagWin_Terrifying;
    private javax.swing.JRadioButton MonTagWin_Tiny;
    private javax.swing.Box.Filler MonTagWin_filler1;
    private javax.swing.Box.Filler MonTagWin_filler2;
    private javax.swing.Box.Filler MonTagWin_filler3;
    private javax.swing.Box.Filler MonTagWin_filler4;
    private javax.swing.Box.Filler MonTagWin_filler5;
    private javax.swing.Box.Filler MonTagWin_filler6;
    private javax.swing.ButtonGroup MonTagsWin_OrgTagsGroup;
    private javax.swing.ButtonGroup MonTagsWin_SizeTagsGroup;
    private javax.swing.JDialog MonsterEdit;
    private javax.swing.JButton MonsterEdit_AddMoveButton;
    private javax.swing.JLabel MonsterEdit_ArmorLabel;
    private javax.swing.JSpinner MonsterEdit_ArmorValue;
    private javax.swing.JSpinner MonsterEdit_AttackMod;
    private javax.swing.JTextField MonsterEdit_AttackNameField;
    private javax.swing.JLabel MonsterEdit_AttackNameLabel;
    private javax.swing.JButton MonsterEdit_AttackTags;
    private javax.swing.JPanel MonsterEdit_BottomPane;
    private javax.swing.JButton MonsterEdit_CancelButton;
    private javax.swing.JTextArea MonsterEdit_DescriptionField;
    private javax.swing.JLabel MonsterEdit_DescriptionLabel;
    private javax.swing.JScrollPane MonsterEdit_DescriptionScrollPane;
    private javax.swing.JComboBox MonsterEdit_Dice;
    private javax.swing.JPanel MonsterEdit_EndPane;
    private javax.swing.JLabel MonsterEdit_HPLabel;
    private javax.swing.JSpinner MonsterEdit_HPValue;
    private javax.swing.JTextField MonsterEdit_InstinctField;
    private javax.swing.JLabel MonsterEdit_InstinctLabel;
    private javax.swing.JPanel MonsterEdit_InstinctPane;
    private javax.swing.JPanel MonsterEdit_MainPane;
    private javax.swing.JPanel MonsterEdit_MiddlePane;
    private javax.swing.JButton MonsterEdit_MonsterTagsButton;
    private javax.swing.JPanel MonsterEdit_MovesControlsPane;
    private javax.swing.JList MonsterEdit_MovesList;
    private javax.swing.JScrollPane MonsterEdit_MovesScroll;
    private javax.swing.JTextField MonsterEdit_NameField;
    private javax.swing.JLabel MonsterEdit_NameLabel;
    private javax.swing.JPanel MonsterEdit_NamePane;
    private javax.swing.JTextField MonsterEdit_NewMove;
    private javax.swing.JButton MonsterEdit_RemoveMoveButton;
    private javax.swing.JComboBox MonsterEdit_Rolls;
    private javax.swing.JPanel MonsterEdit_Row1;
    private javax.swing.JPanel MonsterEdit_Row2;
    private javax.swing.JPanel MonsterEdit_Row3;
    private javax.swing.JPanel MonsterEdit_Row4;
    private javax.swing.JButton MonsterEdit_SaveButton;
    private javax.swing.JTextField MonsterEdit_SpecialQualitiesField;
    private javax.swing.JLabel MonsterEdit_SpecialQualitiesLabel;
    private javax.swing.JPanel MonsterEdit_TopPane;
    private javax.swing.Box.Filler MonsterEdit_filler1;
    private javax.swing.Box.Filler MonsterEdit_filler2;
    private javax.swing.Box.Filler MonsterEdit_filler3;
    private javax.swing.Box.Filler MonsterEdit_filler4;
    private javax.swing.Box.Filler MonsterEdit_filler5;
    private javax.swing.Box.Filler MonsterEdit_filler6;
    private javax.swing.Box.Filler MonsterEdit_filler7;
    private javax.swing.Box.Filler MonsterEdit_filler8;
    private javax.swing.JPanel MonsterFocus;
    private javax.swing.JPanel MonsterFocus_BackButtonBox;
    private javax.swing.JButton MonsterFocus_BackToBestiaryButton;
    private javax.swing.JLabel MonsterFocus_CurrentCollectionsLabel;
    private javax.swing.JList MonsterFocus_CurrentCollectionsList;
    private javax.swing.JPanel MonsterFocus_CurrentCollectionsPane;
    private javax.swing.JScrollPane MonsterFocus_CurrentCollectionsScrollPane;
    private javax.swing.JButton MonsterFocus_EditCollectionsButton;
    private javax.swing.JPanel MonsterFocus_EditCollectionsButtonBox;
    private javax.swing.JButton MonsterFocus_EditMonsterButton;
    private javax.swing.JPanel MonsterFocus_EditMonsterPane;
    private javax.swing.JButton MonsterFocus_EditNoteButton;
    private javax.swing.JPanel MonsterFocus_EditNoteButtonBox;
    private javax.swing.JPanel MonsterFocus_GMNotePane;
    private javax.swing.JScrollPane MonsterFocus_GMNotesScrollPane;
    private javax.swing.JTextArea MonsterFocus_GMNotesText;
    private javax.swing.JLabel MonsterFocus_GMNotesTitle;
    private javax.swing.JPanel MonsterFocus_GMNotesTopPane;
    private LargeMonsterCard MonsterFocus_MainMonster;
    private javax.swing.JPanel MonsterFocus_MonsterPane;
    private javax.swing.JPanel MonsterFocus_Sidebar;
    private javax.swing.JButton MonsterFocus_UploadButton;
    private javax.swing.JPanel MonsterFocus_UploadButtonBox;
    private javax.swing.Box.Filler MonsterFocus_filler1;
    private javax.swing.Box.Filler MonsterFocus_filler2;
    private javax.swing.Box.Filler MonsterFocus_filler3;
    private javax.swing.Box.Filler MonsterFocus_filler4;
    private javax.swing.Box.Filler MonsterFocus_filler5;
    private javax.swing.Box.Filler MonsterFocus_filler6;
    private javax.swing.Box.Filler MonsterFocus_filler7;
    private javax.swing.Box.Filler MonsterFocus_filler8;
    private javax.swing.JDialog MonsterSurvey;
    private javax.swing.JButton MonsterSurvey_Back;
    private javax.swing.JPanel MonsterSurvey_BackNextPane;
    private javax.swing.JButton MonsterSurvey_Cancel;
    private javax.swing.JPanel MonsterSurvey_CancelPane;
    private javax.swing.JPanel MonsterSurvey_Controls;
    private javax.swing.JPanel MonsterSurvey_MainPane;
    private javax.swing.JButton MonsterSurvey_Next;
    private javax.swing.JSeparator MonsterSurvey_jSeparator1;
    private javax.swing.JDialog MonsterTagsWindow;
    private javax.swing.JLabel Monster_EditMovesLabel;
    private javax.swing.JButton NameColWin_AddButton;
    private javax.swing.JPanel NameColWin_ButtonPanel;
    private javax.swing.JButton NameColWin_CancelButton;
    private javax.swing.JPanel NameColWin_MainPanel;
    private javax.swing.JTextField NameColWin_NameField;
    private javax.swing.JLabel NameColWin_Title;
    private javax.swing.Box.Filler NameColWin_filler1;
    private javax.swing.Box.Filler NameColWin_filler2;
    private javax.swing.Box.Filler NameColWin_filler3;
    private javax.swing.Box.Filler NameColWin_filler4;
    private javax.swing.JDialog NameCollectionWindow;
    private javax.swing.JPanel SetColWin_BottomPane;
    private javax.swing.JButton SetColWin_CancelButton;
    private javax.swing.JPanel SetColWin_GridPane;
    private javax.swing.JPanel SetColWin_MainPane;
    private javax.swing.JButton SetColWin_NewCollectionButton;
    private javax.swing.JButton SetColWin_SaveButton;
    private javax.swing.JScrollPane SetColWin_ScrollPane;
    private javax.swing.JLabel SetColWin_Title;
    private javax.swing.JPanel SetColWin_TopPane;
    private javax.swing.Box.Filler SetColWin_filler1;
    private javax.swing.Box.Filler SetColWin_filler3;
    private javax.swing.Box.Filler SetColWin_filler4;
    private javax.swing.Box.Filler SetColWin_filler5;
    private javax.swing.Box.Filler SetColWin_filler6;
    private javax.swing.Box.Filler SetColWin_filler7;
    private javax.swing.JPanel UploadCompWin_ButtonPanel;
    private javax.swing.JLabel UploadCompWin_Label;
    private javax.swing.JPanel UploadCompWin_MainPanel;
    private javax.swing.JButton UploadCompWin_OkayButton;
    private javax.swing.Box.Filler UploadCompWin_filler1;
    private javax.swing.Box.Filler UploadCompWin_filler2;
    private javax.swing.Box.Filler UploadCompWin_filler3;
    private javax.swing.JDialog UploadCompleteWindow;
    private javax.swing.JPanel UploadConWin_ButtonPanel;
    private javax.swing.JLabel UploadConWin_Label1;
    private javax.swing.JLabel UploadConWin_Label2;
    private javax.swing.JPanel UploadConWin_MainPanel;
    private javax.swing.JLabel UploadConWin_MonsterName;
    private javax.swing.JButton UploadConWin_NoButton;
    private javax.swing.JPanel UploadConWin_TextPanel;
    private javax.swing.JButton UploadConWin_YesButton;
    private javax.swing.Box.Filler UploadConWin_filler1;
    private javax.swing.Box.Filler UploadConWin_filler2;
    private javax.swing.Box.Filler UploadConWin_filler3;
    private javax.swing.JDialog UploadConfirmationWindow;
    // End of variables declaration//GEN-END:variables
}
